{"version":3,"file":"index.js","sources":["../../src/ui/History.tsx","../../src/ui/Meta.ts","../../src/util/useDragEvents.ts","../../src/ui/schema/SchemaContext.tsx","../../src/ui/schema/useSchema.ts","../../src/ui/context-menu/contextMenuItems.tsx","../../src/ui/context-menu/ContextMenu.tsx","../../src/util/getLinkHref.ts","../../src/ui/preview/PreviewSnapshotsContext.tsx","../../src/ui/preview/usePreviewSnapshots.ts","../../src/ui/ElementOverlay.tsx","../../src/ui/OverlayDragGroupRect.tsx","../../src/ui/OverlayDragInsertMarker.tsx","../../src/ui/OverlayDragPreview.tsx","../../src/ui/OverlayMinimapPrompt.tsx","../../src/ui/elementsReducer.ts","../../src/ui/overlayStateReducer.ts","../../src/ui/preview/PreviewSnapshotsProvider.tsx","../../src/ui/schema/SchemaProvider.tsx","../../src/ui/shared-state/SharedStateProvider.tsx","../../src/ui/telemetry/TelemetryProvider.tsx","../../src/ui/useController.tsx","../../src/ui/usePerspectiveSync.tsx","../../src/ui/useReportDocuments.ts","../../src/ui/Overlays.tsx","../../src/ui/Refresh.tsx","../../src/ui/useComlink.tsx","../../src/optimistic/state/createSharedListener.ts","../../src/ui/useDatasetMutator.ts","../../src/ui/VisualEditing.tsx"],"sourcesContent":["import {useEffect, type FunctionComponent} from 'react'\nimport type {HistoryAdapter, VisualEditingNode} from '../types'\n\n/**\n * @internal\n */\nexport const History: FunctionComponent<{\n  comlink: VisualEditingNode\n  history?: HistoryAdapter\n}> = (props) => {\n  const {comlink, history} = props\n\n  useEffect(() => {\n    return comlink?.on('presentation/navigate', (data) => {\n      history?.update(data)\n    })\n  }, [comlink, history])\n\n  useEffect(() => {\n    if (history) {\n      return history.subscribe((update) => {\n        update.title = update.title || document.title\n        comlink?.post('visual-editing/navigate', update)\n      })\n    }\n    return\n  }, [comlink, history])\n\n  return null\n}\n","import {useEffect, type FunctionComponent} from 'react'\nimport type {VisualEditingNode} from '../types'\n\n/**\n * @internal\n */\nexport const Meta: FunctionComponent<{\n  comlink: VisualEditingNode\n}> = (props) => {\n  const {comlink} = props\n\n  useEffect(() => {\n    const sendMeta = () => {\n      comlink.post('visual-editing/meta', {title: document.title})\n    }\n\n    const observer = new MutationObserver(([mutation]) => {\n      if (mutation.target.nodeName === 'TITLE') {\n        sendMeta()\n      }\n    })\n\n    observer.observe(document.head, {\n      subtree: true,\n      characterData: true,\n      childList: true,\n    })\n\n    sendMeta()\n\n    return () => observer.disconnect()\n  }, [comlink])\n\n  return null\n}\n","import {at, insert, remove} from '@sanity/mutate'\nimport {get as getFromPath} from '@sanity/util/paths'\nimport {useCallback, useEffect} from 'react'\nimport {useDocuments} from '../react/useDocuments'\nimport type {DragEndEvent, DragInsertPosition} from '../types'\nimport {getArrayItemKeyAndParentPath} from './mutations'\n\n// Finds the node that the drag end event was relative to, and the relative\n// position the new element should be inserted in. If the reference node was\n// \"top\" or \"left\", we insert \"after\". If it was \"bottom\" or \"right\", we insert\n// \"before\".\nfunction getReferenceNodeAndInsertPosition(position: DragInsertPosition) {\n  if (position) {\n    const {top, right, bottom, left} = position\n    if (left || top) {\n      return {node: (left ?? top)!.sanity, position: 'after' as const}\n    } else if (right || bottom) {\n      return {node: (right ?? bottom)!.sanity, position: 'before' as const}\n    }\n  }\n  return undefined\n}\n\nexport function useDragEndEvents(): {\n  dispatchDragEndEvent: (event: DragEndEvent) => void\n} {\n  const {getDocument} = useDocuments()\n\n  useEffect(() => {\n    const handler = (e: CustomEvent<DragEndEvent>) => {\n      const {insertPosition, target, preventInsertDefault} = e.detail\n\n      if (preventInsertDefault) return\n\n      const reference = getReferenceNodeAndInsertPosition(insertPosition)\n      if (reference) {\n        const doc = getDocument(target.id)\n        // We must have access to the document actor in order to perform the\n        // necessary mutations. If this is undefined, something went wrong when\n        // resolving the currently in use documents\n        const {node, position} = reference\n        // Get the key of the element that was dragged\n        const {key: targetKey, hasExplicitKey} = getArrayItemKeyAndParentPath(target)\n        // Get the key of the reference element, and path to the parent array\n        const {path: arrayPath, key: referenceItemKey} = getArrayItemKeyAndParentPath(node)\n        // Don't patch if the keys match, as this means the item was only\n        // dragged to its existing position, i.e. not moved\n        if (arrayPath && referenceItemKey && referenceItemKey !== targetKey) {\n          doc.patch(async ({getSnapshot}) => {\n            const snapshot = await getSnapshot()\n            // Get the current value of the element we dragged, as we will need\n            // to clone this into the new position\n            const elementValue = getFromPath(snapshot, target.path)\n\n            if (hasExplicitKey) {\n              return [\n                // Remove the original dragged item\n                at(arrayPath, remove({_key: targetKey})),\n                // Insert the cloned dragged item into its new position\n                at(arrayPath, insert(elementValue, position, {_key: referenceItemKey})),\n              ]\n            } else {\n              // handle reordering for primitives\n              return [\n                // Remove the original dragged item\n                at(arrayPath, remove(~~targetKey)),\n                // Insert the cloned dragged item into its new position\n                at(\n                  arrayPath,\n                  insert(\n                    elementValue,\n                    position,\n                    // if target key is < reference, each item in the array's index will be one less due to the previous removal\n                    referenceItemKey > targetKey ? ~~referenceItemKey - 1 : ~~referenceItemKey,\n                  ),\n                ),\n              ]\n            }\n          })\n        }\n      }\n    }\n    window.addEventListener('sanity/dragEnd', handler as EventListener)\n    return () => {\n      window.removeEventListener('sanity/dragEnd', handler as EventListener)\n    }\n  }, [getDocument])\n\n  const dispatchDragEndEvent = useCallback((event: DragEndEvent) => {\n    const customEvent = new CustomEvent<DragEndEvent>('sanity/dragEnd', {\n      detail: event,\n      cancelable: true,\n    })\n    window.dispatchEvent(customEvent)\n  }, [])\n\n  return {dispatchDragEndEvent}\n}\n","import type {\n  DocumentSchema,\n  SanityNode,\n  SanityStegaNode,\n  TypeSchema,\n} from '@sanity/presentation-comlink'\nimport {createContext} from 'react'\nimport type {OverlayElementField, OverlayElementParent} from '../../types'\n\nexport interface SchemaContextValue {\n  getField: (node: SanityNode | SanityStegaNode) => {\n    field: OverlayElementField\n    parent: OverlayElementParent\n  }\n  getType: <T extends 'document' | 'type' = 'document'>(\n    node: SanityNode | SanityStegaNode | string,\n    type?: T,\n  ) => T extends 'document' ? DocumentSchema | undefined : TypeSchema | undefined\n}\n\nexport const SchemaContext = createContext<SchemaContextValue | null>(null)\n","import {useContext} from 'react'\nimport {SchemaContext, type SchemaContextValue} from './SchemaContext'\n\nexport function useSchema(): SchemaContextValue {\n  const context = useContext(SchemaContext)\n\n  if (!context) {\n    throw new Error('Schema context is missing')\n  }\n\n  return context\n}\n","import {\n  ArrowDownIcon,\n  ArrowUpIcon,\n  CopyIcon,\n  InsertAboveIcon,\n  InsertBelowIcon,\n  PublishIcon,\n  RemoveIcon,\n  SortIcon,\n  UnpublishIcon,\n} from '@sanity/icons'\nimport type {\n  SanityNode,\n  SchemaArrayItem,\n  SchemaNode,\n  SchemaUnionNode,\n  SchemaUnionOption,\n} from '@sanity/presentation-comlink'\nimport type {SchemaType} from '@sanity/types'\nimport {MenuGroup} from '@sanity/ui/_visual-editing'\nimport {type FunctionComponent} from 'react'\nimport type {OptimisticDocument} from '../../optimistic'\nimport {InsertMenu} from '../../overlay-components/components/InsertMenu'\nimport type {ContextMenuNode, OverlayElementField, OverlayElementParent} from '../../types'\nimport {getNodeIcon} from '../../util/getNodeIcon'\nimport {\n  getArrayDuplicatePatches,\n  getArrayInsertPatches,\n  getArrayMovePatches,\n  getArrayRemovePatches,\n} from '../../util/mutations'\n\nexport function getArrayRemoveAction(node: SanityNode, doc: OptimisticDocument): () => void {\n  if (!node.type) throw new Error('Node type is missing')\n  return () =>\n    doc.patch(async ({getSnapshot}) => getArrayRemovePatches(node, (await getSnapshot())!))\n}\n\nfunction getArrayInsertAction(\n  node: SanityNode,\n  doc: OptimisticDocument,\n  insertType: string,\n  position: 'before' | 'after',\n): () => void {\n  if (!node.type) throw new Error('Node type is missing')\n  return () => doc.patch(() => getArrayInsertPatches(node, insertType, position))\n}\n\nfunction getDuplicateAction(node: SanityNode, doc: OptimisticDocument): () => void {\n  if (!node.type) throw new Error('Node type is missing')\n  return () =>\n    doc.patch(async ({getSnapshot}) => getArrayDuplicatePatches(node, (await getSnapshot())!))\n}\n\nexport function getContextMenuItems(context: {\n  doc: OptimisticDocument\n  field: OverlayElementField\n  node: SanityNode\n  parent: OverlayElementParent\n}): Promise<ContextMenuNode[]> {\n  const {node, field, parent, doc} = context\n  if (field?.type === 'arrayItem') {\n    return getContextMenuArrayItems({node, field, doc})\n  }\n  if (parent?.type === 'union') {\n    return getContextMenuUnionItems({node, parent, doc})\n  }\n\n  return Promise.resolve([])\n}\n\nfunction getDuplicateItem(context: {doc: OptimisticDocument; node: SanityNode}) {\n  const {node, doc} = context\n  if (!doc) return []\n  return [\n    {\n      type: 'action' as const,\n      label: 'Duplicate',\n      icon: CopyIcon,\n      action: getDuplicateAction(node, doc),\n      telemetryEvent: 'Visual Editing Context Menu Item Duplicated' as const,\n    },\n  ]\n}\n\nfunction getRemoveItems(context: {doc: OptimisticDocument; node: SanityNode}) {\n  const {node, doc} = context\n  if (!doc) return []\n  return [\n    {\n      type: 'action' as const,\n      label: 'Remove',\n      icon: RemoveIcon,\n      action: getArrayRemoveAction(node, doc),\n      telemetryEvent: 'Visual Editing Context Menu Item Removed' as const,\n    },\n  ]\n}\n\nasync function getMoveItems(\n  context: {\n    doc: OptimisticDocument\n    node: SanityNode\n  },\n  withDivider = true,\n) {\n  const {node, doc} = context\n  if (!doc) return []\n\n  const items: ContextMenuNode[] = []\n  const groupItems: ContextMenuNode[] = []\n\n  const [moveUpPatches, moveDownPatches, moveFirstPatches, moveLastPatches] = await Promise.all([\n    getArrayMovePatches(node, doc, 'previous'),\n    getArrayMovePatches(node, doc, 'next'),\n    getArrayMovePatches(node, doc, 'first'),\n    getArrayMovePatches(node, doc, 'last'),\n  ])\n\n  if (moveFirstPatches.length) {\n    groupItems.push({\n      type: 'action',\n      label: 'To top',\n      icon: PublishIcon,\n      action: () => doc.patch(moveFirstPatches),\n      telemetryEvent: 'Visual Editing Context Menu Item Moved',\n    })\n  }\n  if (moveUpPatches.length) {\n    groupItems.push({\n      type: 'action',\n      label: 'Up',\n      icon: ArrowUpIcon,\n      action: () => doc.patch(moveUpPatches),\n      telemetryEvent: 'Visual Editing Context Menu Item Moved',\n    })\n  }\n  if (moveDownPatches.length) {\n    groupItems.push({\n      type: 'action',\n      label: 'Down',\n      icon: ArrowDownIcon,\n      action: () => doc.patch(moveDownPatches),\n      telemetryEvent: 'Visual Editing Context Menu Item Moved',\n    })\n  }\n  if (moveLastPatches.length) {\n    groupItems.push({\n      type: 'action',\n      label: 'To bottom',\n      icon: UnpublishIcon,\n      action: () => doc.patch(moveLastPatches),\n      telemetryEvent: 'Visual Editing Context Menu Item Moved',\n    })\n  }\n\n  if (groupItems.length) {\n    items.push({\n      type: 'group',\n      label: 'Move',\n      icon: SortIcon,\n      items: groupItems,\n    })\n    if (withDivider) {\n      items.push({type: 'divider'})\n    }\n  }\n\n  return items\n}\n\nasync function getContextMenuArrayItems(context: {\n  doc: OptimisticDocument\n  field: SchemaArrayItem\n  node: SanityNode\n}): Promise<ContextMenuNode[]> {\n  const {node, field, doc} = context\n  const items: ContextMenuNode[] = []\n  items.push(...getDuplicateItem(context))\n  items.push(...getRemoveItems(context))\n  items.push(...(await getMoveItems(context)))\n\n  items.push({\n    type: 'action',\n    label: 'Insert before',\n    icon: InsertAboveIcon,\n    action: getArrayInsertAction(node, doc, field.name, 'before'),\n    telemetryEvent: 'Visual Editing Context Menu Item Inserted',\n  })\n  items.push({\n    type: 'action',\n    label: 'Insert after',\n    icon: InsertBelowIcon,\n    action: getArrayInsertAction(node, doc, field.name, 'after'),\n    telemetryEvent: 'Visual Editing Context Menu Item Inserted',\n  })\n\n  return items\n}\n\nconst InsertMenuWrapper: FunctionComponent<{\n  label: string\n  onSelect: (schemaType: SchemaType) => void\n  parent: SchemaUnionNode<SchemaNode>\n  width: number | undefined\n  boundaryElement: HTMLDivElement | null\n}> = (props) => {\n  const {label, parent, width, onSelect, boundaryElement} = props\n\n  return (\n    <MenuGroup\n      fontSize={1}\n      icon={InsertBelowIcon}\n      padding={2}\n      popover={{\n        arrow: false,\n        constrainSize: true,\n        floatingBoundary: boundaryElement,\n        padding: 0,\n        placement: 'right-start',\n        fallbackPlacements: [\n          'left-start',\n          'right',\n          'left',\n          'right-end',\n          'left-end',\n          'bottom',\n          'top',\n        ],\n        preventOverflow: true,\n        width,\n        __unstable_margins: [4, 4, 4, 4],\n      }}\n      space={2}\n      text={label}\n    >\n      <InsertMenu node={parent} onSelect={onSelect} />\n    </MenuGroup>\n  )\n}\n\nasync function getContextMenuUnionItems(context: {\n  doc: OptimisticDocument\n  node: SanityNode\n  parent: SchemaUnionNode<SchemaNode>\n}): Promise<ContextMenuNode[]> {\n  const {doc, node, parent} = context\n  const items: ContextMenuNode[] = []\n  items.push(...getDuplicateItem(context))\n  items.push(...getRemoveItems(context))\n  items.push(...(await getMoveItems(context)))\n\n  if (parent.options?.insertMenu) {\n    const insertMenuOptions = parent.options.insertMenu || {}\n    const width = insertMenuOptions.views?.some((view) => view.name === 'grid') ? 0 : undefined\n\n    items.push({\n      type: 'custom',\n      component: ({boundaryElement, sendTelemetry}) => {\n        const onSelect = (schemaType: SchemaType) => {\n          const action = getArrayInsertAction(node, doc, schemaType.name, 'before')\n          action()\n\n          sendTelemetry('Visual Editing Context Menu Item Inserted', null)\n        }\n        return (\n          <InsertMenuWrapper\n            label=\"Insert before\"\n            onSelect={onSelect}\n            parent={parent}\n            width={width}\n            boundaryElement={boundaryElement}\n          />\n        )\n      },\n    })\n\n    items.push({\n      type: 'custom',\n      component: ({boundaryElement, sendTelemetry}) => {\n        const onSelect = (schemaType: SchemaType) => {\n          const action = getArrayInsertAction(node, doc, schemaType.name, 'after')\n          action()\n\n          sendTelemetry('Visual Editing Context Menu Item Inserted', null)\n        }\n        return (\n          <InsertMenuWrapper\n            label=\"Insert after\"\n            onSelect={onSelect}\n            parent={parent}\n            width={width}\n            boundaryElement={boundaryElement}\n          />\n        )\n      },\n    })\n  } else {\n    items.push({\n      type: 'group',\n      label: 'Insert before',\n      icon: InsertAboveIcon,\n      items: (\n        parent.of.filter((item) => item.type === 'unionOption') as SchemaUnionOption<SchemaNode>[]\n      ).map((t) => {\n        return {\n          type: 'action' as const,\n          icon: getNodeIcon(t),\n          label: t.name === 'block' ? 'Paragraph' : t.title || t.name,\n          action: getArrayInsertAction(node, doc, t.name, 'before'),\n          telemetryEvent: 'Visual Editing Context Menu Item Inserted',\n        }\n      }),\n    })\n    items.push({\n      type: 'group',\n      label: 'Insert after',\n      icon: InsertBelowIcon,\n      items: (\n        parent.of.filter((item) => item.type === 'unionOption') as SchemaUnionOption<SchemaNode>[]\n      ).map((t) => {\n        return {\n          type: 'action' as const,\n          label: t.name === 'block' ? 'Paragraph' : t.title || t.name,\n          icon: getNodeIcon(t),\n          action: getArrayInsertAction(node, doc, t.name, 'after'),\n          telemetryEvent: 'Visual Editing Context Menu Item Inserted',\n        }\n      }),\n    })\n  }\n\n  return items\n}\n","import {\n  Box,\n  Flex,\n  Menu,\n  MenuDivider,\n  MenuGroup,\n  MenuItem,\n  Popover,\n  Spinner,\n  Stack,\n  Text,\n  type PopoverMargins,\n} from '@sanity/ui/_visual-editing'\nimport {useCallback, useEffect, useMemo, useState, type FunctionComponent} from 'react'\nimport {useDocuments} from '../../react/useDocuments'\nimport type {ContextMenuNode, ContextMenuProps} from '../../types'\nimport {getNodeIcon} from '../../util/getNodeIcon'\nimport {PopoverPortal} from '../PopoverPortal'\nimport {useSchema} from '../schema/useSchema'\nimport {useTelemetry} from '../telemetry/useTelemetry'\nimport {getContextMenuItems} from './contextMenuItems'\n\nconst POPOVER_MARGINS: PopoverMargins = [-4, 4, -4, 4]\n\nfunction ContextMenuItem(props: {\n  node: ContextMenuNode\n  onDismiss?: () => void\n  boundaryElement: HTMLDivElement | null\n}) {\n  const {node, onDismiss, boundaryElement} = props\n  const sendTelemetry = useTelemetry()\n\n  const onClick = useCallback(() => {\n    if (node.type === 'action') {\n      node.action?.()\n      onDismiss?.()\n\n      if (node.telemetryEvent) {\n        sendTelemetry(node.telemetryEvent, null)\n      }\n    }\n  }, [node, onDismiss, sendTelemetry])\n\n  if (node.type === 'divider') {\n    return <MenuDivider />\n  }\n\n  if (node.type === 'action') {\n    return (\n      <MenuItem\n        fontSize={1}\n        hotkeys={node.hotkeys}\n        icon={node.icon}\n        padding={2}\n        space={2}\n        text={node.label}\n        disabled={!node.action}\n        onClick={onClick}\n      />\n    )\n  }\n\n  if (node.type === 'group') {\n    return (\n      <MenuGroup\n        fontSize={1}\n        icon={node.icon}\n        padding={2}\n        // @todo when this PR lands https://github.com/sanity-io/ui/pull/1454\n        // menu={{\n        //   padding: 0,\n        // }}\n        popover={{\n          arrow: false,\n          constrainSize: true,\n          placement: 'right-start',\n          fallbackPlacements: [\n            'left-start',\n            'right',\n            'left',\n            'right-end',\n            'left-end',\n            'bottom',\n            'top',\n          ],\n          preventOverflow: true,\n          __unstable_margins: POPOVER_MARGINS,\n        }}\n        space={2}\n        text={node.label}\n      >\n        {node.items.map((item, itemIndex) => (\n          <ContextMenuItem\n            key={itemIndex}\n            node={item}\n            onDismiss={onDismiss}\n            boundaryElement={boundaryElement}\n          />\n        ))}\n      </MenuGroup>\n    )\n  }\n\n  if (node.type === 'custom') {\n    const {component: Component} = node\n    return <Component boundaryElement={boundaryElement} sendTelemetry={sendTelemetry} />\n  }\n\n  return null\n}\n\nexport const ContextMenu: FunctionComponent<ContextMenuProps> = (props) => {\n  const {\n    node,\n    onDismiss,\n    position: {x, y},\n  } = props\n\n  const [boundaryElement, setBoundaryElement] = useState<HTMLDivElement | null>(null)\n\n  const {getField} = useSchema()\n  const {getDocument} = useDocuments()\n\n  const {field, parent} = getField(node)\n\n  const title = useMemo(() => {\n    return field?.title || field?.name || 'Unknown type'\n  }, [field])\n\n  const [items, setItems] = useState<ContextMenuNode[] | undefined>(undefined)\n\n  useEffect(() => {\n    const fetchContextMenuItems = async () => {\n      const doc = getDocument(node.id)\n      if (!doc) return\n      const items = await getContextMenuItems({node, field, parent, doc})\n      setItems(items)\n    }\n    fetchContextMenuItems()\n  }, [field, node, parent, getDocument])\n\n  const contextMenuReferenceElement = useMemo(() => {\n    return {\n      getBoundingClientRect: () => ({\n        bottom: y,\n        left: x,\n        right: x,\n        top: y,\n        width: 0,\n        height: 0,\n      }),\n    } as HTMLElement\n  }, [x, y])\n\n  const icon = useMemo(() => {\n    return getNodeIcon(field)\n  }, [field])\n\n  return (\n    <PopoverPortal setBoundaryElement={setBoundaryElement} onDismiss={onDismiss}>\n      <Popover\n        __unstable_margins={POPOVER_MARGINS}\n        arrow={false}\n        open\n        placement=\"right-start\"\n        referenceElement={contextMenuReferenceElement}\n        content={\n          <Menu style={{minWidth: 120, maxWidth: 160}}>\n            <Flex gap={2} padding={2}>\n              <Box flex=\"none\">{items ? <Text size={1}>{icon}</Text> : <Spinner size={1} />}</Box>\n\n              <Stack flex={1} space={2}>\n                <Text size={1} weight=\"semibold\">\n                  {items ? title : 'Loading...'}\n                </Text>\n              </Stack>\n            </Flex>\n\n            {items && (\n              <>\n                <MenuDivider />\n                {items.map((item, i) => (\n                  <ContextMenuItem\n                    key={i}\n                    node={item}\n                    onDismiss={onDismiss}\n                    boundaryElement={boundaryElement}\n                  />\n                ))}\n              </>\n            )}\n          </Menu>\n        }\n      >\n        <div\n          key={`${x}-${y}`}\n          style={{\n            position: 'absolute',\n            left: x,\n            top: y,\n          }}\n        />\n      </Popover>\n    </PopoverPortal>\n  )\n}\n","export function getLinkHref(href: string, referer: string): string {\n  try {\n    const parsed = new URL(href, typeof location === 'undefined' ? undefined : location.origin)\n    if (parsed.hash) {\n      const hash = new URL(getLinkHref(parsed.hash.slice(1), referer))\n      return `${parsed.origin}${parsed.pathname}${parsed.search}#${hash.pathname}${hash.search}`\n    }\n    parsed.searchParams.set('preview', referer)\n    return parsed.toString()\n  } catch {\n    return href\n  }\n}\n","import type {PreviewSnapshot} from '@sanity/presentation-comlink'\nimport {createContext} from 'react'\n\nexport type PreviewSnapshotsContextValue = PreviewSnapshot[]\n\nexport const PreviewSnapshotsContext = createContext<PreviewSnapshotsContextValue | null>(null)\n","import {useContext} from 'react'\nimport {PreviewSnapshotsContext, type PreviewSnapshotsContextValue} from './PreviewSnapshotsContext'\n\nexport function usePreviewSnapshots(): PreviewSnapshotsContextValue {\n  const context = useContext(PreviewSnapshotsContext)\n\n  if (!context) {\n    throw new Error('Preview Snapshots context is missing')\n  }\n\n  return context\n}\n","import {createEditUrl, studioPath} from '@sanity/client/csm'\nimport {DocumentIcon, DragHandleIcon, EllipsisVerticalIcon, PlugIcon} from '@sanity/icons'\nimport {MenuButton, MenuDivider} from '@sanity/ui'\nimport {Box, Button, Card, Flex, Menu, MenuItem, Stack, Text} from '@sanity/ui/_visual-editing'\nimport {pathToUrlString} from '@sanity/visual-editing-csm'\nimport {\n  Fragment,\n  isValidElement,\n  memo,\n  useCallback,\n  useEffect,\n  useId,\n  useMemo,\n  useRef,\n  useState,\n  useSyncExternalStore,\n  type CSSProperties,\n  type FunctionComponent,\n  type MouseEventHandler,\n  type ReactElement,\n} from 'react'\nimport scrollIntoView from 'scroll-into-view-if-needed'\nimport {styled} from 'styled-components'\nimport {v4 as uuid} from 'uuid'\nimport {PointerEvents} from '../overlay-components/components/PointerEvents'\nimport type {\n  ElementChildTarget,\n  ElementFocusedState,\n  ElementNode,\n  OverlayComponent,\n  OverlayComponentResolver,\n  OverlayComponentResolverContext,\n  OverlayPluginDefinition,\n  OverlayPluginExclusiveDefinition,\n  OverlayPluginHudDefinition,\n  OverlayRect,\n  SanityNode,\n  SanityStegaNode,\n  VisualEditingNode,\n} from '../types'\nimport {getLinkHref} from '../util/getLinkHref'\nimport {PopoverBackground} from './PopoverPortal'\nimport {usePreviewSnapshots} from './preview/usePreviewSnapshots'\nimport {useSchema} from './schema/useSchema'\n\nconst isReactElementOverlayComponent = (\n  component:\n    | OverlayComponent\n    | {component: OverlayComponent; props?: Record<string, unknown>}\n    | Array<OverlayComponent | {component: OverlayComponent; props?: Record<string, unknown>}>\n    | ReactElement,\n): component is React.JSX.Element => {\n  return isValidElement(component)\n}\n\nexport interface ElementOverlayProps {\n  id: string\n  comlink?: VisualEditingNode\n  componentResolver?: OverlayComponentResolver\n  plugins?: OverlayPluginDefinition[]\n  draggable: boolean\n  element: ElementNode\n  focused: ElementFocusedState\n  hovered: boolean\n  isDragging: boolean\n  node: SanityNode | SanityStegaNode\n  rect: OverlayRect\n  showActions: boolean\n  wasMaybeCollapsed: boolean\n  enableScrollIntoView: boolean\n  targets: ElementChildTarget[]\n  elementType: 'element' | 'group'\n  onActivateExclusivePlugin?: (\n    plugin: OverlayPluginExclusiveDefinition,\n    context: OverlayComponentResolverContext,\n  ) => void\n  onMenuOpenChange: (open: boolean) => void\n}\n\nconst Root = styled(Card)`\n  background-color: var(--overlay-bg);\n  border-radius: 3px;\n  pointer-events: none;\n  position: absolute;\n  will-change: transform;\n  box-shadow: var(--overlay-box-shadow);\n  transition: none;\n\n  --overlay-bg: transparent;\n  --overlay-box-shadow: inset 0 0 0 1px transparent;\n\n  [data-overlays] & {\n    --overlay-bg: color-mix(in srgb, transparent 95%, var(--card-focus-ring-color));\n    --overlay-box-shadow: inset 0 0 0 2px\n      color-mix(in srgb, transparent 50%, var(--card-focus-ring-color));\n  }\n\n  [data-fading-out] & {\n    transition:\n      box-shadow 1550ms,\n      background-color 1550ms;\n\n    --overlay-bg: rgba(0, 0, 255, 0);\n    --overlay-box-shadow: inset 0 0 0 1px transparent;\n  }\n\n  &[data-focused] {\n    --overlay-box-shadow: inset 0 0 0 1px var(--card-focus-ring-color);\n  }\n\n  &[data-hovered]:not([data-focused]) {\n    transition: none;\n    --overlay-box-shadow: inset 0 0 0 2px var(--card-focus-ring-color);\n  }\n\n  /* [data-unmounted] & {\n    --overlay-box-shadow: inset 0 0 0 1px var(--card-focus-ring-color);\n  } */\n\n  :link {\n    text-decoration: none;\n  }\n`\n\nconst Actions = styled(Flex)`\n  bottom: 100%;\n  cursor: pointer;\n  pointer-events: none;\n  position: absolute;\n  right: 0;\n\n  [data-hovered]:not([data-menu-open]) & {\n    pointer-events: all;\n  }\n\n  [data-flipped] & {\n    bottom: auto;\n    top: 100%;\n  }\n`\n\nconst HUD = styled(Flex)`\n  top: 100%;\n  cursor: pointer;\n  pointer-events: none;\n  position: absolute;\n  left: 0;\n\n  gap: 4px;\n  padding: 4px 0;\n  flex-wrap: wrap;\n\n  [data-hovered]:not([data-menu-open]) & {\n    pointer-events: all;\n  }\n\n  [data-flipped] & {\n    top: calc(100% + 2rem);\n  }\n`\n\nconst MenuWrapper = styled(Flex)`\n  margin: -0.5rem;\n\n  [data-hovered]:not([data-menu-open]) & {\n    pointer-events: all;\n  }\n`\n\nconst Tab = styled(Flex)`\n  bottom: 100%;\n  cursor: pointer;\n  pointer-events: none;\n  position: absolute;\n  left: 0;\n\n  [data-hovered]:not([data-menu-open]) & {\n    pointer-events: all;\n  }\n\n  [data-flipped] & {\n    bottom: auto;\n    top: 100%;\n  }\n`\n\nconst ActionOpen = styled(Card)`\n  cursor: pointer;\n  background-color: var(--card-focus-ring-color);\n  right: 0;\n  border-radius: 3px;\n\n  & [data-ui='Text'] {\n    color: #fff;\n    white-space: nowrap;\n  }\n`\n\nconst Labels = styled(Flex)`\n  display: flex;\n  align-items: center;\n  background-color: var(--card-focus-ring-color);\n  right: 0;\n  border-radius: 3px;\n  & [data-ui='Text'],\n  & [data-sanity-icon] {\n    color: #fff;\n    white-space: nowrap;\n  }\n`\n\nconst ExclusivePluginContainer = styled.div`\n  position: absolute;\n  inset: 0;\n  pointer-events: all;\n`\n\nfunction createIntentLink(node: SanityNode) {\n  const {id, type, path, baseUrl, tool, workspace} = node\n\n  return createEditUrl({\n    baseUrl,\n    workspace,\n    tool,\n    type: type!,\n    id,\n    path: path ? pathToUrlString(studioPath.fromString(path)) : [],\n  })\n}\n\nconst ElementOverlayInner: FunctionComponent<ElementOverlayProps> = (props) => {\n  const {\n    id,\n    element,\n    focused,\n    componentResolver,\n    node,\n    showActions,\n    draggable,\n    targets,\n    elementType,\n    comlink,\n    onActivateExclusivePlugin,\n    onMenuOpenChange,\n  } = props\n\n  const {getField, getType} = useSchema()\n  const schemaType = getType(node)\n\n  const href = 'path' in node ? createIntentLink(node) : node.href\n\n  const previewSnapshots = usePreviewSnapshots()\n\n  const title = useMemo(() => {\n    if (!('path' in node)) return undefined\n    return previewSnapshots.find((snapshot) => snapshot._id === node.id)?.title\n  }, [node, previewSnapshots])\n\n  const resolverContexts = useMemo<{\n    legacyComponentContext: OverlayComponentResolverContext | undefined\n    pluginContexts: OverlayComponentResolverContext[]\n  }>(() => {\n    function getContext(\n      node: SanityNode | SanityStegaNode,\n      nodeElement?: ElementNode,\n    ): OverlayComponentResolverContext | undefined {\n      const schemaType = getType(node)\n      const {field, parent} = getField(node)\n      if (!('id' in node)) return undefined\n      if (!field || !schemaType) return undefined\n      const type = field.value.type\n      return {\n        document: schemaType,\n        element,\n        targetElement: nodeElement || element,\n        field,\n        focused: !!focused,\n        node,\n        parent,\n        type,\n      }\n    }\n    return {\n      legacyComponentContext: elementType === 'element' ? getContext(node) : undefined,\n      pluginContexts: targets\n        .map((target) => getContext(target.sanity, target.element))\n        .filter((ctx) => ctx !== undefined),\n    }\n  }, [elementType, node, targets, getType, getField, element, focused])\n\n  const customComponents = useCustomComponents(\n    resolverContexts.legacyComponentContext,\n    componentResolver,\n  )\n\n  const nodePluginCollections = useResolvedNodePlugins(\n    resolverContexts.pluginContexts,\n    props.plugins,\n  )\n\n  const icon = schemaType?.icon ? (\n    <div dangerouslySetInnerHTML={{__html: schemaType.icon}} />\n  ) : (\n    <DocumentIcon />\n  )\n\n  const menuId = useId()\n\n  const hasMenuitems = nodePluginCollections?.some(\n    (nodePluginCollection) => nodePluginCollection.exclusive.length > 0,\n  )\n  const showMenu = hasMenuitems || nodePluginCollections?.length > 1\n\n  const handleLabelClick = useCallback(() => {\n    window.dispatchEvent(new CustomEvent('sanity-overlay/label-click', {detail: {id}}))\n  }, [id])\n\n  return (\n    <>\n      <PointerEvents>\n        {showActions ? (\n          <Actions gap={1} paddingY={1}>\n            <Link href={href} />\n          </Actions>\n        ) : null}\n        {(title || showMenu) && (\n          <Tab gap={1} paddingY={1} onClick={handleLabelClick}>\n            <Labels gap={2} padding={2}>\n              {draggable && (\n                <Box marginRight={1}>\n                  <Text className=\"drag-handle\" size={0}>\n                    <DragHandleIcon />\n                  </Text>\n                </Box>\n              )}\n              <Text size={0}>{icon}</Text>\n\n              {title && (\n                <Text size={1} weight=\"medium\">\n                  {title}\n                </Text>\n              )}\n\n              {showMenu && (\n                <Box\n                  paddingLeft={2}\n                  onClick={(e) => {\n                    // Do not propagate and click the label too if clicking menu button\n                    e.stopPropagation()\n                  }}\n                >\n                  <MenuWrapper>\n                    <MenuButton\n                      id={menuId}\n                      popover={{\n                        animate: true,\n                        placement: 'bottom-start',\n                        constrainSize: true,\n                        tone: 'default',\n                      }}\n                      onOpen={() => {\n                        onMenuOpenChange?.(true)\n                      }}\n                      onClose={() => {\n                        onMenuOpenChange?.(false)\n                      }}\n                      button={<Button icon={EllipsisVerticalIcon} tone=\"primary\" padding={2} />}\n                      menu={\n                        <Menu paddingY={0}>\n                          <PointerEvents>\n                            {nodePluginCollections?.map((nodePluginCollection, index) => (\n                              <Fragment key={nodePluginCollection.id}>\n                                <Stack role=\"group\" paddingY={1} space={0}>\n                                  <MenuItem\n                                    paddingY={2}\n                                    text={\n                                      <Box paddingY={2}>\n                                        <Text muted size={1} style={{textTransform: 'capitalize'}}>\n                                          {`${nodePluginCollection.context.document.name}: ${nodePluginCollection.context.field?.name}`}\n                                        </Text>\n                                      </Box>\n                                    }\n                                    onClick={() => {\n                                      if (nodePluginCollection.context.node) {\n                                        comlink?.post(\n                                          'visual-editing/focus',\n                                          nodePluginCollection.context.node,\n                                        )\n                                      }\n                                    }}\n                                  />\n                                  {nodePluginCollection.exclusive.map((exclusive) => {\n                                    const Component = exclusive.component\n                                    if (!Component) return null\n                                    return (\n                                      <MenuItem\n                                        paddingY={2}\n                                        key={exclusive.name}\n                                        icon={exclusive.icon || <PlugIcon />}\n                                        text={\n                                          <Box paddingY={2}>\n                                            <Text size={1}>\n                                              {exclusive.title || exclusive.name}\n                                            </Text>\n                                          </Box>\n                                        }\n                                        onClick={() =>\n                                          onActivateExclusivePlugin?.(\n                                            exclusive,\n                                            nodePluginCollection.context,\n                                          )\n                                        }\n                                      />\n                                    )\n                                  })}\n                                </Stack>\n                                {index < nodePluginCollections.length - 1 && <MenuDivider />}\n                              </Fragment>\n                            ))}\n                          </PointerEvents>\n                        </Menu>\n                      }\n                    />\n                  </MenuWrapper>\n                </Box>\n              )}\n            </Labels>\n          </Tab>\n        )}\n\n        <HUD>\n          {nodePluginCollections?.map((nodePluginCollection) => (\n            <Fragment key={nodePluginCollection.id}>\n              {nodePluginCollection.hud.map((hud) => {\n                const Component = hud.component\n                if (!Component) return null\n                return <Component key={hud.name} {...nodePluginCollection.context} />\n              })}\n            </Fragment>\n          ))}\n        </HUD>\n      </PointerEvents>\n\n      {Array.isArray(customComponents)\n        ? customComponents.map(({component: Component, props}, i) => {\n            return (\n              <Component\n                key={i}\n                PointerEvents={PointerEvents}\n                {...resolverContexts.legacyComponentContext!}\n                {...props}\n              />\n            )\n          })\n        : customComponents}\n    </>\n  )\n}\n\nexport const ElementOverlay = memo(function ElementOverlay(\n  props: Omit<ElementOverlayProps, 'setActiveExclusivePlugin' | 'onMenuOpenChange'>,\n) {\n  const {draggable, focused, hovered, rect, wasMaybeCollapsed, enableScrollIntoView} = props\n\n  const ref = useRef<HTMLDivElement>(null)\n\n  const scrolledIntoViewRef = useRef(false)\n\n  const style = useMemo<CSSProperties>(\n    () => ({\n      width: `${rect.w}px`,\n      height: `${rect.h}px`,\n      transform: `translate(${rect.x}px, ${rect.y}px)`,\n    }),\n    [rect],\n  )\n\n  useEffect(() => {\n    if (\n      !scrolledIntoViewRef.current &&\n      !wasMaybeCollapsed &&\n      focused === true &&\n      ref.current &&\n      enableScrollIntoView\n    ) {\n      const target = ref.current\n      scrollIntoView(ref.current, {\n        // Workaround issue with scroll-into-view-if-needed struggling with iframes\n        behavior: (actions) => {\n          if (actions.length === 0) {\n            // An empty actions list equals scrolling isn't needed\n            return\n          }\n          // Uses native scrollIntoView to ensure iframes behave correctly\n          target.scrollIntoView({\n            behavior: 'smooth',\n            block: 'center',\n            inline: 'nearest',\n          })\n        },\n        scrollMode: 'if-needed',\n        block: 'center',\n        inline: 'nearest',\n      })\n    }\n\n    scrolledIntoViewRef.current = focused === true\n  }, [focused, wasMaybeCollapsed, enableScrollIntoView])\n\n  const [isNearTop, setIsNearTop] = useState(false)\n  useEffect(() => {\n    if (!ref.current || !hovered) return undefined\n\n    const io = new IntersectionObserver(\n      ([intersection]) => {\n        setIsNearTop(intersection.boundingClientRect.top < 0)\n      },\n      {threshold: 1},\n    )\n    io.observe(ref.current)\n    return () => io.disconnect()\n  }, [hovered, isNearTop])\n\n  const [activeExclusivePlugin, setActiveExclusivePlugin] = useState<{\n    plugin: OverlayPluginExclusiveDefinition\n    context: OverlayComponentResolverContext\n  } | null>(null)\n\n  const closeExclusivePluginView = useCallback(() => {\n    setActiveExclusivePlugin(null)\n    window.dispatchEvent(new CustomEvent('sanity-overlay/exclusive-plugin-closed'))\n  }, [])\n\n  const onActivateExclusivePlugin = useCallback(\n    (plugin: OverlayPluginExclusiveDefinition, context: OverlayComponentResolverContext) => {\n      setActiveExclusivePlugin({plugin, context})\n    },\n    [],\n  )\n\n  const handleExclusivePluginClick: MouseEventHandler<HTMLDivElement> = (event) => {\n    event.stopPropagation()\n  }\n\n  const ExclusivePluginComponent = activeExclusivePlugin?.plugin.component\n\n  const [menuOpen, setMenuOpen] = useState(false)\n\n  useEffect(() => {\n    setMenuOpen(false)\n  }, [hovered])\n\n  return (\n    <>\n      {menuOpen || ExclusivePluginComponent ? (\n        <PopoverBackground onDismiss={closeExclusivePluginView} blockScroll={menuOpen} />\n      ) : null}\n      <Root\n        data-focused={focused ? '' : undefined}\n        data-hovered={hovered ? '' : undefined}\n        data-flipped={isNearTop ? '' : undefined}\n        data-draggable={draggable ? '' : undefined}\n        data-menu-open={menuOpen ? '' : undefined}\n        ref={ref}\n        style={style}\n      >\n        {ExclusivePluginComponent ? (\n          <ExclusivePluginContainer\n            data-sanity-overlay-element\n            onClick={handleExclusivePluginClick}\n          >\n            <ExclusivePluginComponent\n              {...activeExclusivePlugin.context}\n              closeExclusiveView={closeExclusivePluginView}\n            />\n          </ExclusivePluginContainer>\n        ) : hovered ? (\n          <ElementOverlayInner\n            {...props}\n            onActivateExclusivePlugin={onActivateExclusivePlugin}\n            onMenuOpenChange={setMenuOpen}\n          />\n        ) : null}\n      </Root>\n    </>\n  )\n})\n\ninterface NodePluginCollection {\n  id: string\n  context: OverlayComponentResolverContext\n  hud: OverlayPluginHudDefinition[]\n  exclusive: OverlayPluginExclusiveDefinition[]\n}\n\nfunction useResolvedNodePlugins(\n  componentContexts: OverlayComponentResolverContext[],\n  plugins?: OverlayPluginDefinition[],\n) {\n  return useMemo(\n    () =>\n      componentContexts.map((componentContext) => {\n        const instance: NodePluginCollection = {\n          id: uuid(),\n          context: componentContext,\n          hud: [],\n          exclusive: [],\n        }\n\n        plugins?.forEach((plugin) => {\n          if (!plugin.guard?.(componentContext)) return\n          if (plugin.type === 'hud') instance.hud.push(plugin)\n          if (plugin.type === 'exclusive') instance.exclusive.push(plugin)\n        })\n\n        return instance\n      }),\n    [componentContexts, plugins],\n  )\n}\n\nfunction useCustomComponents(\n  componentContext: OverlayComponentResolverContext | undefined,\n  componentResolver: OverlayComponentResolver | undefined,\n) {\n  return useMemo(() => {\n    if (!componentContext) return undefined\n    const resolved = componentResolver?.(componentContext)\n    if (!resolved) return undefined\n\n    if (isReactElementOverlayComponent(resolved)) {\n      return resolved\n    }\n\n    return (Array.isArray(resolved) ? resolved : [resolved]).map((component) => {\n      if (typeof component === 'object' && 'component' in component) {\n        return component\n      }\n      return {component, props: {}}\n    })\n  }, [componentResolver, componentContext])\n}\n\nconst Link = memo(function Link(props: {href: string}) {\n  const referer = useSyncExternalStore(\n    useCallback((onStoreChange) => {\n      const handlePopState = () => onStoreChange()\n      window.addEventListener('popstate', handlePopState)\n      return () => window.removeEventListener('popstate', handlePopState)\n    }, []),\n    () => window.location.href,\n  )\n  const href = useMemo(() => getLinkHref(props.href, referer), [props.href, referer])\n\n  return (\n    <Box as=\"a\" href={href} target=\"_blank\" rel=\"noopener noreferrer\">\n      <ActionOpen padding={2}>\n        <Text size={1} weight=\"medium\">\n          Open in Studio\n        </Text>\n      </ActionOpen>\n    </Box>\n  )\n})\n","import type {FunctionComponent} from 'react'\nimport type {OverlayRect} from '../types'\n\nexport const OverlayDragGroupRect: FunctionComponent<{\n  dragGroupRect: OverlayRect\n}> = ({dragGroupRect}) => {\n  return (\n    <div\n      style={{\n        position: 'absolute',\n        top: `${dragGroupRect.y}px`,\n        left: `${dragGroupRect.x}px`,\n        width: `${dragGroupRect.w - 1}px`,\n        height: `${dragGroupRect.h - 1}px`,\n        border: '1px dashed #f0709b',\n        pointerEvents: 'none',\n      }}\n    ></div>\n  )\n}\n","import type {FunctionComponent} from 'react'\nimport type {DragInsertPosition} from '../types'\n\nconst markerThickness = 6\n\nfunction lerp(v0: number, v1: number, t: number) {\n  return v0 * (1 - t) + v1 * t\n}\n\nexport const OverlayDragInsertMarker: FunctionComponent<{\n  dragInsertPosition: DragInsertPosition\n}> = ({dragInsertPosition}) => {\n  if (dragInsertPosition === null) return\n\n  const flow = dragInsertPosition?.left || dragInsertPosition?.right ? 'horizontal' : 'vertical'\n\n  let x = 0\n  let y = 0\n  let width = 0\n  let height = 0\n  const offsetMultiplier = 0.0125\n\n  if (flow === 'horizontal') {\n    const {left, right} = dragInsertPosition\n\n    width = markerThickness\n\n    if (right && left) {\n      const startX = left.rect.x + left.rect.w\n      const endX = right.rect.x\n      const targetHeight = Math.min(right.rect.h, left.rect.h)\n      const offset = targetHeight * offsetMultiplier\n\n      x = lerp(startX, endX, 0.5) - markerThickness / 2\n      y = left.rect.y + offset\n\n      height = Math.min(right.rect.h, left.rect.h) - offset * 2\n    } else if (right && !left) {\n      const targetHeight = right.rect.h\n      const offset = targetHeight * offsetMultiplier\n\n      x = right.rect.x - markerThickness / 2\n      y = right.rect.y + offset\n      height = right.rect.h - offset * 2\n    } else if (left && !right) {\n      const targetHeight = left.rect.h\n      const offset = targetHeight * offsetMultiplier\n\n      x = left.rect.x + left.rect.w - markerThickness / 2\n      y = left.rect.y + offset\n      height = left.rect.h - offset * 2\n    }\n  } else {\n    const {bottom, top} = dragInsertPosition\n\n    if (bottom && top) {\n      const startX = Math.min(top.rect.x, bottom.rect.x)\n      const startY = top.rect.y + top.rect.h\n      const endY = bottom.rect.y\n      const targetWidth = Math.min(bottom.rect.w, top.rect.w)\n      const offset = targetWidth * offsetMultiplier\n\n      height = markerThickness\n\n      x = startX + offset\n      y = lerp(startY, endY, 0.5) - markerThickness / 2\n      width = Math.max(bottom.rect.w, top.rect.w) - offset * 2\n    } else if (bottom && !top) {\n      const targetWidth = bottom.rect.w\n      const offset = targetWidth * offsetMultiplier\n\n      x = bottom.rect.x + offset\n      y = bottom.rect.y - markerThickness / 2\n      width = bottom.rect.w - offset * 2\n      height = markerThickness\n    } else if (top && !bottom) {\n      const targetWidth = top.rect.w\n      const offset = targetWidth * offsetMultiplier\n\n      x = top.rect.x + offset\n      y = top.rect.y + top.rect.h - markerThickness / 2\n      width = top.rect.w - offset * 2\n      height = markerThickness\n    }\n  }\n\n  return (\n    <div\n      style={{\n        position: 'absolute',\n        width: `${width}px`,\n        height: `${height}px`,\n        transform: `translate(${x}px, ${y}px)`,\n        background: '#556bfc',\n        border: '2px solid white',\n        borderRadius: '999px',\n        zIndex: '999999',\n      }}\n    ></div>\n  )\n}\n","import {Card, usePrefersDark, useTheme_v2} from '@sanity/ui/_visual-editing'\nimport type {FunctionComponent} from 'react'\nimport {styled} from 'styled-components'\nimport type {DragSkeleton} from '../types'\n\nconst Root = styled.div<{\n  $width: number\n  $height: number\n  $offsetX: number\n  $offsetY: number\n  $scaleFactor: number\n}>`\n  --drag-preview-opacity: 0.98;\n  --drag-preview-skeleton-stroke: #ffffff;\n\n  @media (prefers-color-scheme: dark) {\n    --drag-preview-skeleton-stroke: #383d51;\n  }\n\n  position: fixed;\n  display: grid;\n  transform: ${({$scaleFactor, $width, $height}) =>\n    `translate(calc(var(--drag-preview-x) - ${$width / 2}px), calc(var(--drag-preview-y) - ${$height / 2}px)) scale(${$scaleFactor})`};\n  width: ${({$width}) => `${$width}px`};\n  height: ${({$height}) => `${$height}px`};\n  z-index: 9999999;\n  opacity: var(--drag-preview-opacity);\n  cursor: move;\n\n  .drag-preview-content-wrapper {\n    position: relative;\n    width: 100%;\n    height: 100%;\n    container-type: inline-size;\n  }\n\n  [data-ui='card'] {\n    position: relative;\n    width: 100%;\n    height: 100%;\n  }\n\n  .drag-preview-skeleton {\n    position: absolute;\n    inset: 0;\n\n    rect {\n      stroke: var(--drag-preview-skeleton-stroke);\n    }\n  }\n\n  .drag-preview-handle {\n    position: absolute;\n    top: 4cqmin;\n    left: 4cqmin;\n    width: 6cqmin;\n    fill: var(--drag-preview-handle-fill);\n  }\n`\n\nfunction clamp(number: number, min: number, max: number): number {\n  return number < min ? min : number > max ? max : number\n}\n\nfunction map(number: number, inMin: number, inMax: number, outMin: number, outMax: number): number {\n  const mapped: number = ((number - inMin) * (outMax - outMin)) / (inMax - inMin) + outMin\n  return clamp(mapped, outMin, outMax)\n}\n\nexport const OverlayDragPreview: FunctionComponent<{skeleton: DragSkeleton}> = ({skeleton}) => {\n  const maxSkeletonWidth = Math.min(skeleton.maxWidth, window.innerWidth / 2)\n  const scaleFactor = skeleton.w > maxSkeletonWidth ? maxSkeletonWidth / skeleton.w : 1\n\n  const offsetX = skeleton.offsetX * scaleFactor\n  const offsetY = skeleton.offsetY * scaleFactor\n\n  const prefersDark = usePrefersDark()\n  const theme = useTheme_v2()\n\n  const radius = theme.radius[~~map(skeleton.w, 0, 1920, 1, theme.radius.length - 2)]\n\n  const imageRects = skeleton.childRects.filter((r) => r.tagName === 'IMG')\n  const textRects = skeleton.childRects.filter((r) => r.tagName !== 'IMG')\n\n  return (\n    <Root\n      $width={skeleton.w}\n      $height={skeleton.h}\n      $offsetX={offsetX}\n      $offsetY={offsetY}\n      $scaleFactor={scaleFactor}\n    >\n      <Card\n        radius={radius}\n        shadow={4}\n        overflow=\"hidden\"\n        tone=\"transparent\"\n        scheme={prefersDark ? 'dark' : 'light'}\n      >\n        <div className=\"drag-preview-content-wrapper\">\n          <svg className=\"drag-preview-skeleton\" viewBox={`0 0 ${skeleton.w} ${skeleton.h}`}>\n            {/* render image rects first to account for background images overlapping text */}\n            {[...imageRects, ...textRects].map((r, i) => (\n              <rect\n                key={i}\n                x={r.x}\n                y={r.y}\n                width={r.w}\n                height={r.h}\n                fill={theme.color.skeleton.from}\n              ></rect>\n            ))}\n          </svg>\n        </div>\n      </Card>\n    </Root>\n  )\n}\n","import {ExpandIcon} from '@sanity/icons'\nimport {Card, Flex, Hotkeys, Text} from '@sanity/ui/_visual-editing'\nimport type {FunctionComponent} from 'react'\nimport {styled} from 'styled-components'\n\nconst Root = styled(Card)`\n  position: fixed;\n  bottom: 2rem;\n  left: 2rem;\n`\n\nexport const OverlayMinimapPrompt: FunctionComponent = () => {\n  return (\n    <Root padding={2} shadow={2} radius={2} style={{zIndex: '999999'}}>\n      <Flex align=\"center\" gap={2}>\n        <Hotkeys keys={['Shift']} />\n        <Text size={1}>Zoom Out</Text>\n        <ExpandIcon />\n      </Flex>\n    </Root>\n  )\n}\n","import type {VisualEditingControllerMsg} from '@sanity/presentation-comlink'\nimport type {ElementState, OverlayMsg} from '../types'\n\n/**\n * Reducer for managing element state from received channel messages\n * @internal\n */\nexport const elementsReducer = (\n  elements: ElementState[],\n  message: OverlayMsg | VisualEditingControllerMsg,\n): ElementState[] => {\n  const {type} = message\n  switch (type) {\n    case 'element/register': {\n      const elementExists = !!elements.find((e) => e.id === message.id)\n      if (elementExists) return elements\n\n      return [\n        ...elements,\n        {\n          id: message.id,\n          activated: false,\n          element: message.element,\n          focused: false,\n          hovered: false,\n          rect: message.rect,\n          sanity: message.sanity,\n          dragDisabled: message.dragDisabled,\n          targets: message.targets,\n          elementType: message.elementType,\n        },\n      ]\n    }\n    case 'element/activate':\n      return elements.map((e) => {\n        if (e.id === message.id) {\n          return {...e, activated: true}\n        }\n        return e\n      })\n    case 'element/update': {\n      return elements.map((e) => {\n        if (e.id === message.id) {\n          return {\n            ...e,\n            sanity: message.sanity,\n            rect: message.rect,\n            targets: message.targets,\n            elementType: message.elementType,\n          }\n        }\n        return e\n      })\n    }\n    case 'element/unregister':\n      return elements.filter((e) => e.id !== message.id)\n    case 'element/deactivate':\n      return elements.map((e) => {\n        if (e.id === message.id) {\n          return {...e, activated: false, hovered: false}\n        }\n        return e\n      })\n    case 'element/mouseenter':\n      return elements.map((e) => {\n        if (e.id === message.id) {\n          return {...e, rect: message.rect, hovered: true}\n        }\n        return {...e, hovered: false}\n      })\n    case 'element/mouseleave':\n      return elements.map((element) => {\n        if (element.id === message.id) {\n          return {...element, hovered: false}\n        }\n        return element\n      })\n    case 'element/updateRect':\n      return elements.map((element) => {\n        if (element.id === message.id) {\n          return {...element, rect: message.rect}\n        }\n        return element\n      })\n    case 'element/click':\n      return elements.map((e) => {\n        return {...e, focused: e.id === message.id && 'clicked'}\n      })\n    case 'overlay/reset-mouse-state':\n      return elements.map((e) => {\n        return {...e, focused: false, hovered: false}\n      })\n    case 'overlay/blur':\n      return elements.map((e) => {\n        return {...e, focused: false}\n      })\n    case 'presentation/blur':\n      return elements.map((e) => {\n        return {...e, focused: false}\n      })\n    case 'presentation/focus': {\n      // Before setting the focus state of each element, check to see if any\n      // element has gained focus from an `element/click` message. Presentation\n      // tool \"reflects\" these back as a `presentation/focus` message.\n      const clickedElement = elements.find((e) => e.focused === 'clicked')\n      return elements.map((e) => {\n        // We want to focus any element which matches the received id and path\n        const focused =\n          'path' in e.sanity &&\n          e.sanity.id === message.data.id &&\n          e.sanity.path === message.data.path\n\n        // If we have a 'clicked' element, and that element matches, it is a\n        // reflection, so we maintain the focus state\n        if (clickedElement && e === clickedElement && focused) {\n          return e\n        }\n\n        return {\n          ...e,\n          // Mark as a dupe if another matching item has been clicked to prevent\n          // scrolling, otherwise just set focus as a boolean\n          focused: focused && clickedElement ? 'duplicate' : focused,\n        }\n      })\n    }\n    default:\n      return elements\n  }\n}\n","import type {ClientPerspective} from '@sanity/client'\nimport type {SanityNode, VisualEditingControllerMsg} from '@sanity/presentation-comlink'\nimport type {\n  DragInsertPosition,\n  DragSkeleton,\n  ElementState,\n  OverlayMsg,\n  OverlayRect,\n} from '../types'\nimport {elementsReducer} from './elementsReducer'\n\nexport interface OverlayState {\n  contextMenu: {\n    node: SanityNode\n    position: {\n      x: number\n      y: number\n    }\n  } | null\n  focusPath: string\n  elements: ElementState[]\n  wasMaybeCollapsed: boolean\n  perspective: ClientPerspective\n  isDragging: boolean\n  dragInsertPosition: DragInsertPosition\n  dragSkeleton: DragSkeleton | null\n  dragShowMinimap: boolean\n  dragShowMinimapPrompt: boolean\n  dragMinimapTransition: boolean\n  dragGroupRect: OverlayRect | null\n}\n\nexport function overlayStateReducer(\n  state: OverlayState,\n  message: OverlayMsg | VisualEditingControllerMsg,\n): OverlayState {\n  const {type} = message\n  let {\n    contextMenu,\n    focusPath,\n    perspective,\n    isDragging,\n    dragInsertPosition,\n    dragShowMinimap,\n    dragShowMinimapPrompt,\n    dragSkeleton,\n    dragMinimapTransition,\n    dragGroupRect,\n  } = state\n  let wasMaybeCollapsed = false\n\n  if (type === 'presentation/focus') {\n    const prevFocusPath = state.focusPath\n\n    focusPath = message.data.path\n\n    if (prevFocusPath !== focusPath) {\n      wasMaybeCollapsed = prevFocusPath.slice(focusPath.length).startsWith('[')\n    }\n  }\n\n  if (type === 'presentation/perspective') {\n    perspective = message.data.perspective\n  }\n\n  if (type === 'element/contextmenu') {\n    if ('sanity' in message) {\n      contextMenu = {node: message.sanity, position: message.position}\n    } else {\n      contextMenu = null\n    }\n  }\n\n  if (\n    type === 'element/click' ||\n    type === 'element/mouseleave' ||\n    type === 'overlay/blur' ||\n    type === 'presentation/blur' ||\n    type === 'presentation/focus'\n  ) {\n    contextMenu = null\n  }\n\n  if (type === 'overlay/dragUpdateInsertPosition') {\n    dragInsertPosition = message.insertPosition\n  }\n\n  if (type === 'overlay/dragStart') {\n    isDragging = true\n  }\n\n  if (message.type === 'overlay/dragUpdateSkeleton') {\n    dragSkeleton = message.skeleton\n  }\n\n  if (type === 'overlay/dragEnd') {\n    isDragging = false\n  }\n\n  if (message.type === 'overlay/dragToggleMinimapPrompt') {\n    dragShowMinimapPrompt = message.display\n  }\n\n  if (type === 'overlay/dragStartMinimapTransition') {\n    dragMinimapTransition = true\n  }\n\n  if (type === 'overlay/dragEndMinimapTransition') {\n    dragMinimapTransition = false\n  }\n\n  if (type === 'overlay/dragUpdateGroupRect') {\n    dragGroupRect = message.groupRect\n  }\n\n  if (type === 'overlay/dragToggleMinimap') {\n    dragShowMinimap = message.display\n  }\n\n  return {\n    ...state,\n    contextMenu,\n    elements: elementsReducer(state.elements, message),\n    dragInsertPosition,\n    dragSkeleton,\n    dragGroupRect,\n    isDragging,\n    focusPath,\n    perspective,\n    wasMaybeCollapsed,\n    dragShowMinimap,\n    dragShowMinimapPrompt,\n    dragMinimapTransition,\n  }\n}\n","import {\n  useCallback,\n  useEffect,\n  useMemo,\n  useState,\n  type FunctionComponent,\n  type PropsWithChildren,\n} from 'react'\nimport type {VisualEditingNode} from '../../types'\nimport {PreviewSnapshotsContext, type PreviewSnapshotsContextValue} from './PreviewSnapshotsContext'\n\nexport const PreviewSnapshotsProvider: FunctionComponent<\n  PropsWithChildren<{\n    comlink?: VisualEditingNode\n  }>\n> = function (props) {\n  const {comlink, children} = props\n\n  const [previewSnapshots, setPreviewSnapshots] = useState<PreviewSnapshotsContextValue>([])\n\n  const fetchPreviewSnapshots = useCallback(\n    async (signal: AbortSignal) => {\n      if (!comlink) return\n      try {\n        const response = await comlink.fetch('visual-editing/preview-snapshots', undefined, {\n          signal,\n          suppressWarnings: true,\n        })\n        setPreviewSnapshots(response.snapshots)\n      } catch {\n        // Fail silently as the app may be communicating with a version of\n        // Presentation that does not support this feature\n      }\n    },\n    [comlink],\n  )\n  useEffect(() => {\n    if (!comlink) return\n\n    const previewSapshotsFetch = new AbortController()\n    const unsub = comlink.onStatus(() => {\n      fetchPreviewSnapshots(previewSapshotsFetch.signal)\n    }, 'connected')\n\n    return () => {\n      previewSapshotsFetch.abort()\n      unsub()\n    }\n  }, [comlink, fetchPreviewSnapshots])\n\n  useEffect(() => {\n    return comlink?.on('presentation/preview-snapshots', (data) => {\n      setPreviewSnapshots(data.snapshots)\n    })\n  }, [comlink])\n\n  const context = useMemo<PreviewSnapshotsContextValue>(() => previewSnapshots, [previewSnapshots])\n  return (\n    <PreviewSnapshotsContext.Provider value={context}>{children}</PreviewSnapshotsContext.Provider>\n  )\n}\n","import type {\n  DocumentSchema,\n  ResolvedSchemaTypeMap,\n  SanityNode,\n  SanityStegaNode,\n  SchemaType,\n  TypeSchema,\n  UnresolvedPath,\n} from '@sanity/presentation-comlink'\nimport {\n  useCallback,\n  useDeferredValue,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n  type FunctionComponent,\n  type PropsWithChildren,\n} from 'react'\nimport type {\n  ElementState,\n  OverlayElementField,\n  OverlayElementParent,\n  VisualEditingNode,\n} from '../../types'\nimport {SchemaContext, type SchemaContextValue} from './SchemaContext'\n\nfunction isSanityNode(node: SanityNode | SanityStegaNode): node is SanityNode {\n  return 'path' in node\n}\n\nfunction isDocumentSchemaType(type: SchemaType): type is DocumentSchema {\n  return type.type === 'document'\n}\n\nfunction isTypeSchemaType(type: SchemaType): type is TypeSchema {\n  return type.type === 'type'\n}\n\nfunction popUnkeyedPathSegments(path: string): string {\n  return path\n    .split('.')\n    .toReversed()\n    .reduce((acc, part) => {\n      if (acc.length) return [part, ...acc]\n      if (part.includes('[_key==')) return [part]\n      return []\n    }, [] as string[])\n    .join('.')\n}\n\nfunction getPathsWithUnresolvedTypes(elements: ElementState[]): {id: string; path: string}[] {\n  return elements.reduce((acc, element) => {\n    const {sanity} = element\n    if (!('id' in sanity)) return acc\n    if (!sanity.path.includes('[_key==')) return acc\n    const path = popUnkeyedPathSegments(sanity.path)\n    if (!acc.find((item) => item.id === sanity.id && item.path === path)) {\n      acc.push({id: sanity.id, path})\n    }\n    return acc\n  }, [] as UnresolvedPath[])\n}\n\nexport const SchemaProvider: FunctionComponent<\n  PropsWithChildren<{\n    comlink?: VisualEditingNode\n    elements: ElementState[]\n  }>\n> = function (props) {\n  const {comlink, children, elements} = props\n\n  const [resolvedTypes, setResolvedTypes] = useState<ResolvedSchemaTypeMap>(new Map())\n\n  const [schema, setSchema] = useState<SchemaType[] | null>(null)\n\n  useEffect(() => {\n    if (!comlink) return\n\n    async function fetchSchema(signal: AbortSignal) {\n      if (!comlink) return\n      try {\n        const response = await comlink.fetch('visual-editing/schema', undefined, {\n          signal,\n          suppressWarnings: true,\n        })\n        setSchema(response.schema)\n      } catch {\n        // Fail silently as the app may be communicating with a version of\n        // Presentation that does not support this feature\n      }\n    }\n    const schemaFetch = new AbortController()\n    const unsub = comlink.onStatus(() => {\n      fetchSchema(schemaFetch.signal)\n    }, 'connected')\n\n    return () => {\n      schemaFetch.abort()\n      unsub()\n    }\n  }, [comlink])\n\n  const reportedPathsRef = useRef<UnresolvedPath[]>([])\n  const paths = getPathsWithUnresolvedTypes(useDeferredValue(elements))\n  const controllerRef = useRef<AbortController | null>(null)\n\n  useEffect(() => {\n    if (!paths.length || !comlink) return\n    // We report a list of paths that reference array items using a _key. We need\n    // to resolve the types of each of these items so we can map them to the\n    // correct schema types. One day CSM might include this data for us.\n    const reportPaths = async (paths: UnresolvedPath[], signal: AbortSignal) => {\n      const initialReportedPaths = reportedPathsRef.current\n      try {\n        reportedPathsRef.current = paths\n        const response = await comlink.fetch(\n          'visual-editing/schema-union-types',\n          {paths},\n          {signal, suppressWarnings: true},\n        )\n        if (signal.aborted) return\n        setResolvedTypes(response.types)\n        controllerRef.current = null\n      } catch {\n        // Fail silently as the app may be communicating with a version of\n        // Presentation that does not support this feature\n      }\n      if (signal.aborted) {\n        reportedPathsRef.current = initialReportedPaths\n      }\n    }\n\n    if (\n      paths.some(\n        (p) => !reportedPathsRef.current.find(({id, path}) => id === p.id && path === p.path),\n      )\n    ) {\n      // Abort any previous requests\n      controllerRef.current?.abort()\n      controllerRef.current = new AbortController()\n      reportPaths(paths, controllerRef.current.signal)\n    }\n  }, [comlink, paths])\n\n  const getType = useCallback(\n    <T extends 'document' | 'type' = 'document'>(\n      node: SanityNode | SanityStegaNode | string,\n      _type?: T,\n    ): T extends 'document' ? DocumentSchema | undefined : TypeSchema | undefined => {\n      const type = _type || 'document'\n      if (\n        !schema ||\n        (typeof node !== 'string' && (!isSanityNode(node) || !Array.isArray(schema)))\n      ) {\n        return undefined\n      }\n      const name = typeof node === 'string' ? node : node.type\n      const filter = type === 'document' ? isDocumentSchemaType : isTypeSchemaType\n      return schema\n        .filter(filter)\n        .find((schemaType) => schemaType.name === name) as T extends 'document'\n        ? DocumentSchema | undefined\n        : TypeSchema | undefined\n    },\n    [schema],\n  )\n\n  const getField = useCallback(\n    (\n      node: SanityNode | SanityStegaNode,\n    ): {\n      field: OverlayElementField\n      parent: OverlayElementParent\n    } => {\n      if (!isSanityNode(node)) {\n        return {\n          field: undefined,\n          parent: undefined,\n        }\n      }\n\n      const schemaType = getType(node)\n\n      if (!schemaType) {\n        return {\n          field: undefined,\n          parent: undefined,\n        }\n      }\n      function fieldFromPath(\n        schemaType: OverlayElementParent,\n        path: string[],\n        parent: OverlayElementParent,\n        prevPath: string[] = [],\n      ): {\n        field: OverlayElementField\n        parent: OverlayElementParent\n      } {\n        if (!schemaType) {\n          return {field: undefined, parent: undefined}\n        }\n\n        const [next, ...rest] = path\n\n        if ('fields' in schemaType) {\n          const objectField = schemaType.fields[next]\n          if (!objectField && 'rest' in schemaType) {\n            return fieldFromPath(schemaType.rest, path, schemaType, prevPath)\n          }\n          if (!rest.length) {\n            return {field: objectField, parent}\n          }\n          if (!objectField) {\n            throw new Error(\n              `[@sanity/visual-editing] No field could be resolved at path: \"${[...prevPath, ...path].join('.')}\"`,\n            )\n          }\n          return fieldFromPath(objectField.value, rest, schemaType, [...prevPath, next])\n        } else if (schemaType.type === 'array') {\n          return fieldFromPath(schemaType.of, path, schemaType, prevPath)\n        } else if (schemaType.type === 'arrayItem') {\n          if (!rest.length) return {field: schemaType, parent}\n          return fieldFromPath(schemaType.value, rest, schemaType, [...prevPath, next])\n        } else if (schemaType.type === 'union') {\n          const name = next.startsWith('[_key==')\n            ? resolvedTypes\n                ?.get((node as SanityNode).id)\n                ?.get([prevPath.join('.'), next].filter(Boolean).join(''))\n            : next\n          return fieldFromPath(\n            schemaType.of.find((item) => (item.type === 'unionOption' ? item.name === name : item)),\n            rest,\n            schemaType,\n            [...prevPath, next],\n          )\n        } else if (schemaType.type === 'unionOption') {\n          if (!next) return {field: schemaType, parent}\n          return fieldFromPath(schemaType.value, path, schemaType, prevPath)\n        } else if (schemaType.type === 'inline') {\n          const type = getType(schemaType.name, 'type')\n          return fieldFromPath((type as TypeSchema).value, path, schemaType, prevPath)\n        }\n        throw new Error(\n          `[@sanity/visual-editing] No field could be resolved at path: \"${[...prevPath, ...path].join('.')}\"`,\n        )\n      }\n\n      const nodePath = node.path.split('.').flatMap((part) => {\n        if (part.includes('[')) {\n          return part.split(/(\\[.+\\])/, 2)\n        }\n        return [part]\n      })\n\n      try {\n        return fieldFromPath(schemaType, nodePath, undefined)\n      } catch (e) {\n        // eslint-disable-next-line no-console\n        if (e instanceof Error) console.warn(e.message)\n        return {field: undefined, parent: undefined}\n      }\n    },\n    [getType, resolvedTypes],\n  )\n\n  const context = useMemo<SchemaContextValue>(() => ({getField, getType}), [getField, getType])\n\n  return <SchemaContext.Provider value={context}>{children}</SchemaContext.Provider>\n}\n","import type {SerializableObject} from '@sanity/presentation-comlink'\nimport {useEffect, useMemo, type FunctionComponent, type PropsWithChildren} from 'react'\nimport type {VisualEditingNode} from '../../types'\nimport {SharedStateContext} from './SharedStateContext'\n\nconst createStore = (initialState: SerializableObject) => {\n  let state = initialState\n  const getState = () => state\n  const listeners = new Set<() => void>()\n  const setState = (fn: (state: SerializableObject) => SerializableObject) => {\n    state = fn(state)\n    listeners.forEach((l) => l())\n  }\n  const subscribe = (listener: () => void) => {\n    listeners.add(listener)\n    return () => listeners.delete(listener)\n  }\n  return {getState, setState, subscribe}\n}\n\nconst store = createStore({})\n\nexport const SharedStateProvider: FunctionComponent<\n  PropsWithChildren<{\n    comlink?: VisualEditingNode\n  }>\n> = (props) => {\n  const {comlink, children} = props\n\n  useEffect(() => {\n    return comlink?.on('presentation/shared-state', (data) => {\n      if ('value' in data) {\n        store.setState((prev) => ({...prev, [data.key]: data.value}))\n      } else {\n        store.setState((prev) => {\n          return Object.fromEntries(Object.entries(prev).filter(([key]) => key !== data.key))\n        })\n      }\n    })\n  }, [comlink])\n\n  useEffect(() => {\n    async function fetch() {\n      const value = await comlink?.fetch('visual-editing/shared-state', undefined, {\n        suppressWarnings: true,\n      })\n      if (value) {\n        store.setState(() => value.state)\n      }\n    }\n    fetch().catch((reason) => {\n      // eslint-disable-next-line no-console\n      console.debug(reason)\n      // eslint-disable-next-line no-console\n      console.warn(\n        '[@sanity/visual-editing]: Failed to fetch shared state. Check your version of `sanity` is up-to-date',\n      )\n    })\n  }, [comlink])\n\n  const value = useMemo(() => ({comlink, store}), [comlink])\n\n  return <SharedStateContext.Provider value={value}>{children}</SharedStateContext.Provider>\n}\n","import {useCallback, type FunctionComponent, type PropsWithChildren} from 'react'\nimport type {VisualEditingNode} from '../../types'\nimport {events, TelemetryContext, type TelemetryContextValue} from './TelemetryContext'\n\nexport const TelemetryProvider: FunctionComponent<\n  PropsWithChildren<{comlink?: VisualEditingNode}>\n> = ({children, comlink}) => {\n  const log = useCallback<TelemetryContextValue>(\n    (name, data) => {\n      if (!comlink) return\n\n      const event = events[name]\n\n      if (!event) {\n        throw new Error(`Telemetry event: ${name} does not exist`)\n      } else {\n        comlink.post('visual-editing/telemetry-log', {event, data})\n      }\n    },\n    [comlink],\n  )\n\n  return <TelemetryContext.Provider value={log}>{children}</TelemetryContext.Provider>\n}\n","import {useEffect, useRef, type MutableRefObject} from 'react'\nimport {createOverlayController} from '../controller'\nimport {useOptimisticActorReady} from '../react/useOptimisticActor'\nimport type {OverlayController, OverlayEventHandler} from '../types'\n\n/**\n * Hook for using an overlay controller\n * @internal\n */\nexport function useController(\n  element: HTMLElement | null,\n  handler: OverlayEventHandler,\n  inFrame: boolean,\n  inPopUp: boolean,\n): MutableRefObject<OverlayController | undefined> {\n  const overlayController = useRef<OverlayController | undefined>(undefined)\n\n  const optimisticActorReady = useOptimisticActorReady()\n\n  useEffect(() => {\n    if (!element) return undefined\n\n    overlayController.current = createOverlayController({\n      handler,\n      overlayElement: element,\n      inFrame,\n      inPopUp,\n      optimisticActorReady,\n    })\n\n    return () => {\n      overlayController.current?.destroy()\n      overlayController.current = undefined\n    }\n  }, [element, handler, inFrame, inPopUp, optimisticActorReady])\n\n  return overlayController\n}\n","import type {VisualEditingControllerMsg} from '@sanity/presentation-comlink'\nimport {useEffect} from 'react'\nimport type {OverlayMsg, VisualEditingNode} from '../types'\n\nexport function usePerspectiveSync(\n  comlink: VisualEditingNode | undefined,\n  dispatch: (value: OverlayMsg | VisualEditingControllerMsg) => void,\n): void {\n  useEffect(() => {\n    const controller = new AbortController()\n    comlink\n      ?.fetch('visual-editing/fetch-perspective', undefined, {\n        signal: controller.signal,\n        suppressWarnings: true,\n      })\n      .then((data) => {\n        dispatch({type: 'presentation/perspective', data})\n      })\n      .catch(() => {\n        // Fail silently as the app may be communicating with a version of\n        // Presentation that does not support this feature\n      })\n\n    const unsub = comlink?.on('presentation/perspective', (data) => {\n      dispatch({type: 'presentation/perspective', data})\n    })\n\n    return () => {\n      unsub?.()\n      controller.abort()\n    }\n  }, [comlink, dispatch])\n}\n","import type {ClientPerspective, ContentSourceMapDocuments} from '@sanity/client'\nimport {useCallback, useEffect, useRef} from 'react'\nimport type {ElementState, SanityNode, VisualEditingNode} from '../types'\n\nfunction isEqualSets(a: Set<string>, b: Set<string>) {\n  if (a === b) return true\n  if (a.size !== b.size) return false\n  for (const value of a) if (!b.has(value)) return false\n  return true\n}\n\n/**\n * Hook for reporting in use documents to Presentation\n * @internal\n */\nexport function useReportDocuments(\n  comlink: VisualEditingNode | undefined,\n  elements: ElementState[],\n  perspective: ClientPerspective,\n): void {\n  const lastReported = useRef<\n    | {\n        nodeIds: Set<string>\n        perspective: ClientPerspective\n      }\n    | undefined\n  >(undefined)\n\n  const reportDocuments = useCallback(\n    (documents: ContentSourceMapDocuments, perspective: ClientPerspective) => {\n      comlink?.post('visual-editing/documents', {\n        documents,\n        perspective,\n      })\n    },\n    [comlink],\n  )\n\n  useEffect(() => {\n    // Report only nodes of type `SanityNode`. Untransformed `SanityStegaNode`\n    // nodes without an `id`, are not reported as they will not contain the\n    // necessary document data.\n    const nodes = elements\n      .map((e) => {\n        const {sanity} = e\n        if (!sanity || !('id' in sanity)) return null\n        return sanity\n      })\n      .filter((s) => !!s) as SanityNode[]\n\n    const nodeIds = new Set<string>(nodes.map((e) => e.id))\n    // Report if:\n    // - Documents not yet reported\n    // - Document IDs changed\n    // - Perspective changed\n    if (\n      !lastReported.current ||\n      !isEqualSets(nodeIds, lastReported.current.nodeIds) ||\n      perspective !== lastReported.current.perspective\n    ) {\n      const documentsOnPage: ContentSourceMapDocuments = Array.from(nodeIds).map((_id) => {\n        const node = nodes.find((node) => node.id === _id)!\n        const {type, projectId: _projectId, dataset: _dataset} = node\n        return _projectId && _dataset\n          ? {_id, _type: type!, _projectId, _dataset}\n          : {_id, _type: type!}\n      })\n      lastReported.current = {nodeIds, perspective}\n      reportDocuments(documentsOnPage, perspective)\n    }\n  }, [elements, perspective, reportDocuments])\n}\n","import type {ClientPerspective} from '@sanity/client'\nimport {getDraftId, getPublishedId} from '@sanity/client/csm'\nimport type {Status} from '@sanity/comlink'\nimport {type VisualEditingControllerMsg} from '@sanity/presentation-comlink'\nimport {\n  isHTMLAnchorElement,\n  isHTMLElement,\n  LayerProvider,\n  PortalProvider,\n  studioTheme,\n  ThemeProvider,\n  usePrefersDark,\n} from '@sanity/ui/_visual-editing'\nimport {\n  useCallback,\n  useEffect,\n  useMemo,\n  useReducer,\n  useRef,\n  useState,\n  type FunctionComponent,\n} from 'react'\nimport {styled} from 'styled-components'\nimport {useOptimisticActor, useOptimisticActorReady} from '../react/useOptimisticActor'\nimport type {\n  OverlayComponentResolver,\n  OverlayEventHandler,\n  OverlayMsg,\n  OverlayPluginDefinition,\n  VisualEditingNode,\n} from '../types'\nimport {sanityNodesExistInSameArray} from '../util/findSanityNodes'\nimport {useDragEndEvents} from '../util/useDragEvents'\nimport {ContextMenu} from './context-menu/ContextMenu'\nimport {ElementOverlay} from './ElementOverlay'\nimport {OverlayDragGroupRect} from './OverlayDragGroupRect'\nimport {OverlayDragInsertMarker} from './OverlayDragInsertMarker'\nimport {OverlayDragPreview} from './OverlayDragPreview'\nimport {OverlayMinimapPrompt} from './OverlayMinimapPrompt'\nimport {overlayStateReducer} from './overlayStateReducer'\nimport {PreviewSnapshotsProvider} from './preview/PreviewSnapshotsProvider'\nimport {SchemaProvider} from './schema/SchemaProvider'\nimport {SharedStateProvider} from './shared-state/SharedStateProvider'\nimport {TelemetryProvider} from './telemetry/TelemetryProvider'\nimport {useTelemetry} from './telemetry/useTelemetry'\nimport {useController} from './useController'\nimport {usePerspectiveSync} from './usePerspectiveSync'\nimport {useReportDocuments} from './useReportDocuments'\n\nconst Root = styled.div<{\n  $zIndex?: string | number\n}>`\n  background-color: transparent;\n  direction: ltr;\n  inset: 0;\n  pointer-events: none;\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  z-index: ${({$zIndex}) => $zIndex ?? '9999999'};\n`\n\nfunction raf2(fn: () => void) {\n  let r0: number | undefined = undefined\n  let r1: number | undefined = undefined\n\n  r0 = requestAnimationFrame(() => {\n    r1 = requestAnimationFrame(fn)\n  })\n\n  return () => {\n    if (r0 !== undefined) cancelAnimationFrame(r0)\n    if (r1 !== undefined) cancelAnimationFrame(r1)\n  }\n}\n\nconst DocumentReporter: FunctionComponent<{\n  documentIds: string[]\n  perspective: ClientPerspective\n}> = (props) => {\n  const {documentIds} = props\n  const [uniqueIds, setUniqueIds] = useState<string[]>([])\n\n  useEffect(() => {\n    setUniqueIds((prev) => {\n      const next = Array.from(new Set(documentIds))\n      return prev.length === next.length &&\n        prev.reduce((acc, prevId) => acc.filter((id) => id !== prevId), next)?.length === 0\n        ? prev\n        : next\n    })\n  }, [documentIds])\n  const actor = useOptimisticActor()\n\n  useEffect(() => {\n    for (const id of uniqueIds) {\n      actor.send({type: 'observe', documentId: getDraftId(id)})\n      actor.send({type: 'observe', documentId: getPublishedId(id)})\n    }\n    return () => {\n      for (const id of uniqueIds) {\n        actor.send({type: 'unobserve', documentId: getDraftId(id)})\n        actor.send({type: 'unobserve', documentId: getPublishedId(id)})\n      }\n    }\n  }, [actor, uniqueIds])\n\n  return null\n}\n\nconst OverlaysController: FunctionComponent<{\n  comlink?: VisualEditingNode\n  dispatch: (value: OverlayMsg | VisualEditingControllerMsg) => void\n  inFrame: boolean\n  inPopUp: boolean\n  onDrag: (x: number, y: number) => void\n  overlayEnabled: boolean\n  rootElement: HTMLElement | null\n}> = (props) => {\n  const {comlink, dispatch, inFrame, inPopUp, onDrag, overlayEnabled, rootElement} = props\n  const {dispatchDragEndEvent} = useDragEndEvents()\n  const sendTelemetry = useTelemetry()\n\n  const overlayEventHandler: OverlayEventHandler = useCallback(\n    (message) => {\n      if (message.type === 'element/click') {\n        const {sanity} = message\n        comlink?.post('visual-editing/focus', sanity)\n\n        sendTelemetry('Visual Editing Overlay Clicked', null)\n      } else if (message.type === 'overlay/activate') {\n        comlink?.post('visual-editing/toggle', {enabled: true})\n      } else if (message.type === 'overlay/deactivate') {\n        comlink?.post('visual-editing/toggle', {enabled: false})\n      } else if (message.type === 'overlay/dragEnd') {\n        const {insertPosition, target, dragGroup, flow, preventInsertDefault} = message\n\n        dispatchDragEndEvent({insertPosition, target, dragGroup, flow, preventInsertDefault})\n\n        if (insertPosition) {\n          sendTelemetry('Visual Editing Drag Sequence Completed', null)\n        }\n      } else if (message.type === 'overlay/dragUpdateCursorPosition') {\n        onDrag(message.x, message.y)\n\n        return\n      } else if (message.type === 'overlay/dragToggleMinimap' && message.display === true) {\n        sendTelemetry('Visual Editing Drag Minimap Enabled', null)\n      } else if (message.type === 'overlay/setCursor') {\n        const {element, cursor} = message\n\n        if (cursor) {\n          element.style.cursor = cursor\n        } else {\n          element.style.removeProperty('cursor')\n        }\n      }\n\n      dispatch(message)\n    },\n    [comlink, dispatch, dispatchDragEndEvent, onDrag, sendTelemetry],\n  )\n\n  const controller = useController(rootElement, overlayEventHandler, inFrame, inPopUp)\n\n  useEffect(() => {\n    if (overlayEnabled) {\n      controller.current?.activate()\n    } else {\n      controller.current?.deactivate()\n    }\n  }, [controller, overlayEnabled])\n\n  return null\n}\n\n/**\n * @internal\n */\nexport const Overlays: FunctionComponent<{\n  comlink?: VisualEditingNode\n  comlinkStatus?: Status\n  componentResolver?: OverlayComponentResolver\n  plugins?: OverlayPluginDefinition[]\n  inFrame: boolean\n  inPopUp: boolean\n  zIndex?: string | number\n}> = (props) => {\n  const {\n    comlink,\n    comlinkStatus,\n    componentResolver: _componentResolver,\n    inFrame,\n    inPopUp,\n    zIndex,\n  } = props\n\n  const prefersDark = usePrefersDark()\n\n  const [\n    {\n      contextMenu,\n      dragInsertPosition,\n      dragShowMinimap,\n      dragShowMinimapPrompt,\n      dragSkeleton,\n      elements,\n      isDragging,\n      perspective,\n      wasMaybeCollapsed,\n      dragMinimapTransition,\n      dragGroupRect,\n    },\n    dispatch,\n  ] = useReducer(overlayStateReducer, {\n    contextMenu: null,\n    dragInsertPosition: null,\n    dragShowMinimap: false,\n    dragShowMinimapPrompt: false,\n    dragSkeleton: null,\n    elements: [],\n    focusPath: '',\n    isDragging: false,\n    perspective: 'published',\n    wasMaybeCollapsed: false,\n    dragMinimapTransition: false,\n    dragGroupRect: null,\n  })\n  const [rootElement, setRootElement] = useState<HTMLElement | null>(null)\n  const [overlayEnabled, setOverlayEnabled] = useState(true)\n\n  useEffect(() => {\n    const unsubs = [\n      comlink?.on('presentation/focus', (data) => {\n        dispatch({type: 'presentation/focus', data})\n      }),\n      comlink?.on('presentation/blur', (data) => {\n        dispatch({type: 'presentation/blur', data})\n      }),\n      comlink?.on('presentation/toggle-overlay', () => {\n        setOverlayEnabled((enabled) => !enabled)\n      }),\n    ].filter(Boolean)\n\n    return () => unsubs.forEach((unsub) => unsub!())\n  }, [comlink])\n\n  usePerspectiveSync(comlink, dispatch)\n\n  useReportDocuments(comlink, elements, perspective)\n\n  const updateDragPreviewCustomProps = useCallback(\n    (x: number, y: number) => {\n      if (!rootElement) return\n\n      rootElement.style.setProperty('--drag-preview-x', `${x}px`)\n      rootElement.style.setProperty('--drag-preview-y', `${y - window.scrollY}px`)\n    },\n    [rootElement],\n  )\n\n  useEffect(() => {\n    const handleClick = (event: MouseEvent) => {\n      const target = event.target\n\n      // We only need to modify the default behavior if the target is a link\n      const targetsLink = Boolean(\n        isHTMLAnchorElement(target) || (isHTMLElement(target) && target.closest('a')),\n      )\n\n      if (targetsLink && event.altKey) {\n        event.preventDefault()\n        event.stopPropagation()\n        const newEvent = new MouseEvent(event.type, {\n          ...event,\n          altKey: false,\n          bubbles: true,\n          cancelable: true,\n        })\n        event.target?.dispatchEvent(newEvent)\n      }\n    }\n\n    const handleKeyUp = (e: KeyboardEvent) => {\n      if (isAltKey(e)) {\n        setOverlayEnabled((enabled) => !enabled)\n      }\n    }\n\n    const handleKeydown = (e: KeyboardEvent) => {\n      if (isAltKey(e)) {\n        setOverlayEnabled((enabled) => !enabled)\n      }\n\n      if (isHotkey(['mod', '\\\\'], e)) {\n        setOverlayEnabled((enabled) => !enabled)\n      }\n    }\n\n    window.addEventListener('click', handleClick)\n    window.addEventListener('keydown', handleKeydown)\n    window.addEventListener('keyup', handleKeyUp)\n\n    return () => {\n      window.removeEventListener('click', handleClick)\n      window.removeEventListener('keydown', handleKeydown)\n      window.removeEventListener('keyup', handleKeyUp)\n    }\n  }, [setOverlayEnabled])\n\n  const [overlaysFlash, setOverlaysFlash] = useState(false)\n  const [fadingOut, setFadingOut] = useState(false)\n  const fadeOutTimeoutRef = useRef<NodeJS.Timeout | undefined>(undefined)\n\n  // Flash overlays when they are enabled\n  useEffect(() => {\n    if (overlayEnabled) {\n      return raf2(() => {\n        setOverlaysFlash(true)\n        raf2(() => {\n          setFadingOut(true)\n          fadeOutTimeoutRef.current = setTimeout(() => {\n            setFadingOut(false)\n            setOverlaysFlash(false)\n          }, 1500)\n        })\n      })\n    } else if (fadeOutTimeoutRef.current) {\n      clearTimeout(fadeOutTimeoutRef.current)\n      setOverlaysFlash(false)\n      setFadingOut(false)\n    }\n\n    return\n  }, [overlayEnabled])\n\n  const documentIds = useMemo(() => {\n    return elements.flatMap((element) => ('id' in element.sanity ? [element.sanity.id] : []))\n  }, [elements])\n\n  const closeContextMenu = useCallback(() => {\n    dispatch({type: 'overlay/blur'})\n  }, [])\n\n  const optimisticActorReady = useOptimisticActorReady()\n\n  const componentResolver = useMemo(() => {\n    return optimisticActorReady ? _componentResolver : undefined\n  }, [_componentResolver, optimisticActorReady])\n\n  const elementsToRender = useMemo(() => {\n    if (((inFrame || inPopUp) && comlinkStatus !== 'connected') || isDragging) {\n      return []\n    }\n\n    return elements\n      .filter((e) => e.activated || e.focused)\n      .map(({id, element, focused, hovered, rect, sanity, dragDisabled, targets, elementType}) => {\n        const draggable =\n          !dragDisabled &&\n          !!element.getAttribute('data-sanity') &&\n          optimisticActorReady &&\n          elements.some((e) =>\n            'id' in e.sanity && 'id' in sanity\n              ? sanityNodesExistInSameArray(e.sanity, sanity) && e.sanity.path !== sanity.path\n              : false,\n          )\n\n        return (\n          <ElementOverlay\n            comlink={comlink}\n            componentResolver={componentResolver}\n            plugins={props.plugins}\n            element={element}\n            enableScrollIntoView={!isDragging && !dragMinimapTransition && !dragShowMinimap}\n            key={id}\n            id={id}\n            focused={focused}\n            hovered={hovered}\n            node={sanity}\n            rect={rect}\n            // When inside a popup window we want actions to show up on hover, but iframes should hide them\n            showActions={!inFrame}\n            draggable={draggable}\n            isDragging={isDragging || dragMinimapTransition}\n            wasMaybeCollapsed={focused && wasMaybeCollapsed}\n            targets={targets}\n            elementType={elementType}\n          />\n        )\n      })\n  }, [\n    componentResolver,\n    props.plugins,\n    dragMinimapTransition,\n    dragShowMinimap,\n    elements,\n    inFrame,\n    inPopUp,\n    isDragging,\n    optimisticActorReady,\n    comlink,\n    comlinkStatus,\n    wasMaybeCollapsed,\n  ])\n\n  return (\n    <TelemetryProvider comlink={comlink}>\n      <ThemeProvider scheme={prefersDark ? 'dark' : 'light'} theme={studioTheme} tone=\"transparent\">\n        <LayerProvider>\n          <PortalProvider element={rootElement}>\n            <SchemaProvider comlink={comlink} elements={elements}>\n              <PreviewSnapshotsProvider comlink={comlink}>\n                <SharedStateProvider comlink={comlink}>\n                  <Root\n                    data-fading-out={fadingOut ? '' : undefined}\n                    data-overlays={overlaysFlash ? '' : undefined}\n                    ref={setRootElement}\n                    $zIndex={zIndex}\n                  >\n                    <DocumentReporter documentIds={documentIds} perspective={perspective} />\n                    <OverlaysController\n                      comlink={comlink}\n                      dispatch={dispatch}\n                      inFrame={inFrame}\n                      inPopUp={inPopUp}\n                      onDrag={updateDragPreviewCustomProps}\n                      overlayEnabled={overlayEnabled}\n                      rootElement={rootElement}\n                    />\n                    {contextMenu && <ContextMenu {...contextMenu} onDismiss={closeContextMenu} />}\n                    {elementsToRender}\n\n                    {isDragging && !dragMinimapTransition && (\n                      <>\n                        {dragInsertPosition && (\n                          <OverlayDragInsertMarker dragInsertPosition={dragInsertPosition} />\n                        )}\n                        {dragShowMinimapPrompt && <OverlayMinimapPrompt />}\n                        {dragGroupRect && <OverlayDragGroupRect dragGroupRect={dragGroupRect} />}\n                      </>\n                    )}\n                    {isDragging && dragSkeleton && <OverlayDragPreview skeleton={dragSkeleton} />}\n                  </Root>\n                </SharedStateProvider>\n              </PreviewSnapshotsProvider>\n            </SchemaProvider>\n          </PortalProvider>\n        </LayerProvider>\n      </ThemeProvider>\n    </TelemetryProvider>\n  )\n}\n\nconst IS_MAC =\n  typeof window != 'undefined' && /Mac|iPod|iPhone|iPad/.test(window.navigator.platform)\n\nconst MODIFIERS: Record<string, 'altKey' | 'ctrlKey' | 'metaKey' | 'shiftKey'> = {\n  alt: 'altKey',\n  ctrl: 'ctrlKey',\n  mod: IS_MAC ? 'metaKey' : 'ctrlKey',\n  shift: 'shiftKey',\n}\nfunction isHotkey(keys: string[], event: KeyboardEvent): boolean {\n  return keys.every((key) => {\n    if (MODIFIERS[key]) {\n      return event[MODIFIERS[key]]\n    }\n    return event.key === key.toUpperCase()\n  })\n}\nfunction isAltKey(event: KeyboardEvent): boolean {\n  return event.key === 'Alt'\n}\n","import {useEffect, useRef, type FunctionComponent} from 'react'\nimport type {VisualEditingNode, VisualEditingOptions} from '../types'\n\n/**\n * @internal\n */\nexport const Refresh: FunctionComponent<\n  {\n    comlink: VisualEditingNode\n  } & Required<Pick<VisualEditingOptions, 'refresh'>>\n> = (props) => {\n  const {comlink, refresh} = props\n\n  const manualRefreshRef = useRef(0)\n  const mutationRefreshRef = useRef(0)\n\n  useEffect(\n    () =>\n      comlink.on('presentation/refresh', (data) => {\n        if (data.source === 'manual') {\n          clearTimeout(manualRefreshRef.current)\n          const promise = refresh(data)\n          if (promise === false) return\n          comlink.post('visual-editing/refreshing', data)\n          let timedOut = false\n          manualRefreshRef.current = window.setTimeout(() => {\n            comlink.post('visual-editing/refreshed', data)\n            timedOut = true\n          }, 3000)\n          promise?.finally?.(() => {\n            if (timedOut) return\n            clearTimeout(manualRefreshRef.current)\n            comlink.post('visual-editing/refreshed', data)\n          })\n        } else if (data.source === 'mutation') {\n          clearTimeout(mutationRefreshRef.current)\n          const promise = refresh(data)\n          if (promise === false) return\n          comlink.post('visual-editing/refreshing', data)\n          // Send an additional refresh to account for Content Lake eventual consistency\n          mutationRefreshRef.current = window.setTimeout(() => {\n            const promise = refresh(data)\n            if (promise === false) return\n            comlink.post('visual-editing/refreshing', data)\n            // eslint-disable-next-line @typescript-eslint/no-unused-expressions\n            promise?.finally?.(() => {\n              comlink.post('visual-editing/refreshed', data)\n            }) || comlink.post('visual-editing/refreshed', data)\n          }, 1000)\n          // eslint-disable-next-line @typescript-eslint/no-unused-expressions\n          promise?.finally?.(() => {\n            comlink.post('visual-editing/refreshed', data)\n          }) || comlink.post('visual-editing/refreshed', data)\n        }\n      }),\n    [comlink, refresh],\n  )\n\n  return null\n}\n","import {createNode, createNodeMachine, type Status} from '@sanity/comlink'\nimport {\n  createCompatibilityActors,\n  type VisualEditingControllerMsg,\n  type VisualEditingNodeMsg,\n} from '@sanity/presentation-comlink'\nimport {useEffect, useState} from 'react'\nimport type {VisualEditingNode} from '../types'\n\n/**\n * Hook for maintaining a channel between overlays and the presentation tool\n * @internal\n */\nexport function useComlink(active: boolean = true): [VisualEditingNode | undefined, Status] {\n  const [node, setNode] = useState<VisualEditingNode>()\n  const [status, setStatus] = useState<Status>('idle')\n\n  useEffect(() => {\n    if (!active) return\n    const instance = createNode<VisualEditingNodeMsg, VisualEditingControllerMsg>(\n      {\n        name: 'visual-editing',\n        connectTo: 'presentation',\n      },\n      createNodeMachine<VisualEditingNodeMsg, VisualEditingControllerMsg>().provide({\n        actors: createCompatibilityActors<VisualEditingNodeMsg>(),\n      }),\n    )\n    const unsub = instance.onStatus(() => setStatus('connected'), 'connected')\n\n    setNode(instance)\n    const stop = instance.start()\n\n    return () => {\n      unsub()\n      stop()\n      setNode(undefined)\n    }\n  }, [active])\n\n  /**\n   * Handle reporting of status to the presentation tool in case of connection failure due to misconfigured URL origin\n   */\n  useEffect(() => {\n    /**\n     * We only need to report status if the node is not connected\n     */\n    if (status === 'connected') return\n\n    const controller = new AbortController()\n    window.addEventListener(\n      'message',\n      ({data, origin}: MessageEvent<unknown>) => {\n        /**\n         * Detect if Presentation is asking if Visual Editing is here but misconfigured\n         * @TODO this should probably be a feature built into `comlink`, as it's a common problem for apps dealing with iframes.\n         */\n        if (\n          data &&\n          typeof data === 'object' &&\n          'domain' in data &&\n          data.domain === 'sanity/channels' &&\n          'from' in data &&\n          data.from === 'presentation' &&\n          'type' in data &&\n          data.type === 'presentation/status'\n        ) {\n          /**\n           * We only send this message to the parent window, which supports Presentation loading the page in an iframe.\n           * This avoids letting other iframes on the page, or other openers, from getting a response.\n           */\n          window.parent.postMessage(\n            {\n              domain: 'sanity/channels',\n              type: 'visual-editing/status',\n              data: {origin: location.origin},\n            },\n            /**\n             * Using the same origin ensures that if the parent window don't have the same origin the message won't be sent.\n             * This grants some protection against spoofing, as malicious iframes can't easily call this event and trigger the Presentation Tool to think there's a failing state.\n             */\n            origin,\n          )\n        }\n      },\n      {signal: controller.signal},\n    )\n    return () => {\n      controller.abort()\n    }\n  }, [status])\n\n  return [node, status]\n}\n","import {type ListenEvent} from '@sanity/client'\nimport {merge, ReplaySubject, Subject, type Observable, type ObservedValueOf} from 'rxjs'\nimport type {VisualEditingNode} from '../../types'\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ntype SharedListenEvent = ListenEvent<Record<string, any>>\n\n/**\n * Creates a single, shared, listener EventSource that strems remote mutations, and notifies when it's online (welcome), offline (reconnect).\n */\nexport function createSharedListener(comlink: VisualEditingNode): Observable<SharedListenEvent> {\n  // Welcome events could be received before the listener has been subscribed\n  // to. Using a ReplaySubject will ensure the welcome event is re-emitted when\n  // a new subscriber arrives.\n  const incomingConnection$ = new ReplaySubject<SharedListenEvent>(1)\n  const incomingMutations$ = new Subject<SharedListenEvent>()\n\n  comlink\n    .fetch('visual-editing/snapshot-welcome', undefined, {suppressWarnings: true})\n    .then((data) => {\n      incomingConnection$.next(data.event)\n    })\n    .catch(() => {\n      // Fail silently as the app may be communicating with a version of\n      // Presentation that does not support this feature\n    })\n\n  comlink.on('presentation/snapshot-event', (data) => {\n    // Welcome events are still emitted by Presentation for backwards\n    // compatibility. We don't need them anymore as we explicitly fetch the\n    // welcome event, so filter them out here.\n    if (data.event.type === 'reconnect') {\n      incomingConnection$.next(data.event)\n    }\n    if (data.event.type === 'mutation') {\n      incomingMutations$.next(data.event)\n    }\n  })\n\n  return merge(incomingConnection$, incomingMutations$)\n}\n\nexport type SharedListenerEvents = ObservedValueOf<ReturnType<typeof createSharedListener>>\n","import {useEffect} from 'react'\nimport {createActor} from 'xstate'\nimport {setActor} from '../optimistic/context'\nimport {createSharedListener} from '../optimistic/state/createSharedListener'\nimport {createDatasetMutator} from '../optimistic/state/datasetMutator'\nimport type {VisualEditingNode} from '../types'\n\n/**\n * Hook for maintaining a channel between overlays and the presentation tool\n * @internal\n */\nexport function useDatasetMutator(comlink: VisualEditingNode | undefined): void {\n  useEffect(() => {\n    if (!comlink) return\n    const listener = createSharedListener(comlink)\n    const datasetMutator = createDatasetMutator(comlink)\n    const mutator = createActor(datasetMutator, {\n      // @ts-expect-error @todo\n      input: {client: {withConfig: () => {}}, sharedListener: listener},\n    })\n\n    mutator.start()\n\n    // Fetch features to determine if optimistic updates are supported\n    const featuresFetch = new AbortController()\n    comlink\n      .fetch('visual-editing/features', undefined, {\n        signal: featuresFetch.signal,\n        suppressWarnings: true,\n      })\n      .then((data) => {\n        if (data.features['optimistic']) {\n          setActor(mutator)\n        }\n      })\n      .catch(() => {\n        // eslint-disable-next-line no-console\n        console.warn(\n          '[@sanity/visual-editing] Package version mismatch detected: Please update your Sanity studio to prevent potential compatibility issues.',\n        )\n      })\n\n    return () => {\n      mutator.stop()\n      featuresFetch.abort()\n    }\n  }, [comlink])\n}\n","import {isMaybePreviewIframe, isMaybePreviewWindow} from '@sanity/presentation-comlink'\nimport {useEffect, useState} from 'react'\nimport {createPortal} from 'react-dom'\nimport type {VisualEditingOptions} from '../types'\nimport {History} from './History'\nimport {Meta} from './Meta'\nimport {Overlays} from './Overlays'\nimport {Refresh} from './Refresh'\nimport {useComlink} from './useComlink'\nimport {useDatasetMutator} from './useDatasetMutator'\n\n/**\n * @public\n */\nexport const VisualEditing = (props: VisualEditingOptions & {portal: boolean}): React.ReactNode => {\n  const {components, plugins, history, portal = true, refresh, zIndex} = props\n\n  const [inFrame, setInFrame] = useState<boolean | null>(null)\n  const [inPopUp, setInPopUp] = useState<boolean | null>(null)\n  useEffect(() => {\n    setInFrame(isMaybePreviewIframe())\n    setInPopUp(isMaybePreviewWindow())\n  }, [])\n\n  const [portalElement, setPortalElement] = useState<HTMLElement | null>(null)\n  useEffect(() => {\n    if (portal === false) return undefined\n    const node = document.createElement('sanity-visual-editing')\n    document.documentElement.appendChild(node)\n    setPortalElement(node)\n    return () => {\n      setPortalElement(null)\n      if (document.documentElement.contains(node)) {\n        document.documentElement.removeChild(node)\n      }\n    }\n  }, [portal])\n\n  const [comlink, comlinkStatus] = useComlink(inFrame === true || inPopUp === true)\n  useDatasetMutator(comlinkStatus === 'connected' ? comlink : undefined)\n\n  const children = (\n    <>\n      {inFrame !== null && inPopUp !== null && (\n        <Overlays\n          comlink={comlink}\n          comlinkStatus={comlinkStatus}\n          componentResolver={components}\n          plugins={plugins}\n          inFrame={inFrame}\n          inPopUp={inPopUp}\n          zIndex={zIndex}\n        />\n      )}\n      {comlink && (\n        <>\n          <History comlink={comlink} history={history} />\n          <Meta comlink={comlink} />\n          {refresh && <Refresh comlink={comlink} refresh={refresh} />}\n        </>\n      )}\n    </>\n  )\n\n  if (portal === false || !portalElement) return children\n\n  return createPortal(children, portalElement)\n}\nVisualEditing.displayName = 'VisualEditing'\n"],"names":["History","props","$","_c","comlink","history","t0","t1","on","data","update","useEffect","t2","t3","subscribe","title","document","post","Meta","sendMeta","observer","MutationObserver","mutation","target","nodeName","observe","head","subtree","characterData","childList","disconnect","getReferenceNodeAndInsertPosition","position","top","right","bottom","left","node","sanity","useDragEndEvents","getDocument","useDocuments","handler","e","insertPosition","preventInsertDefault","detail","reference","doc","id","key","targetKey","hasExplicitKey","getArrayItemKeyAndParentPath","path","arrayPath","referenceItemKey","patch","getSnapshot","snapshot","elementValue","getFromPath","at","remove","_key","insert","window","addEventListener","removeEventListener","dispatchDragEndEvent","_temp","Symbol","for","event","customEvent","CustomEvent","cancelable","dispatchEvent","SchemaContext","createContext","useSchema","context","useContext","Error","getArrayRemoveAction","type","getArrayRemovePatches","getArrayInsertAction","insertType","getArrayInsertPatches","getDuplicateAction","getArrayDuplicatePatches","getContextMenuItems","field","parent","getContextMenuArrayItems","getContextMenuUnionItems","Promise","resolve","getDuplicateItem","label","icon","CopyIcon","action","telemetryEvent","getRemoveItems","RemoveIcon","getMoveItems","withDivider","items","groupItems","moveUpPatches","moveDownPatches","moveFirstPatches","moveLastPatches","all","getArrayMovePatches","length","push","PublishIcon","ArrowUpIcon","ArrowDownIcon","UnpublishIcon","SortIcon","InsertAboveIcon","name","InsertBelowIcon","InsertMenuWrapper","width","onSelect","boundaryElement","arrow","constrainSize","floatingBoundary","padding","placement","fallbackPlacements","preventOverflow","__unstable_margins","t4","options","insertMenu","views","some","view","undefined","component","sendTelemetry","schemaType","of","filter","item","map","t","getNodeIcon","POPOVER_MARGINS","ContextMenuItem","onDismiss","useTelemetry","onClick","hotkeys","t5","itemIndex","Component","ContextMenu","x","y","setBoundaryElement","useState","getField","setItems","fetchContextMenuItems","items_0","t6","getBoundingClientRect","height","contextMenuReferenceElement","t7","t8","t9","minWidth","maxWidth","t10","t11","t12","t13","t14","i","t15","t16","t17","t18","t19","t20","getLinkHref","href","referer","parsed","URL","location","origin","hash","slice","pathname","search","searchParams","set","toString","PreviewSnapshotsContext","usePreviewSnapshots","isReactElementOverlayComponent","isValidElement","Root","styled","Card","Actions","Flex","HUD","MenuWrapper","Tab","ActionOpen","Labels","ExclusivePluginContainer","div","createIntentLink","baseUrl","tool","workspace","createEditUrl","pathToUrlString","studioPath","fromString","ElementOverlayInner","element","focused","componentResolver","showActions","draggable","targets","elementType","onActivateExclusivePlugin","onMenuOpenChange","getType","previewSnapshots","bb0","find","_id","node_0","nodeElement","schemaType_0","value","targetElement","getContext","legacyComponentContext","pluginContexts","resolverContexts","customComponents","useCustomComponents","nodePluginCollections","useResolvedNodePlugins","plugins","__html","menuId","useId","_temp2","showMenu","handleLabelClick","_temp3","animate","tone","EllipsisVerticalIcon","nodePluginCollection_0","index","Fragment","textTransform","nodePluginCollection","exclusive","MenuDivider","_temp4","Array","isArray","Component_1","props_0","PointerEvents","ElementOverlay","memo","hovered","rect","wasMaybeCollapsed","enableScrollIntoView","ref","useRef","scrolledIntoViewRef","w","h","transform","style","current","scrollIntoView","behavior","actions","block","inline","scrollMode","isNearTop","setIsNearTop","io","IntersectionObserver","intersection","boundingClientRect","threshold","activeExclusivePlugin","setActiveExclusivePlugin","closeExclusivePluginView","plugin","handleExclusivePluginClick","_temp5","ExclusivePluginComponent","menuOpen","setMenuOpen","t21","componentContexts","componentContext","instance","uuid","hud","forEach","guard","resolved","_temp6","Link","useSyncExternalStore","_temp7","_temp8","ctx","stopPropagation","nodePluginCollection_1","Component_0","onStoreChange","handlePopState","OverlayDragGroupRect","dragGroupRect","border","pointerEvents","markerThickness","lerp","v0","v1","OverlayDragInsertMarker","dragInsertPosition","flow","startX","endX","offset","Math","min","offset_0","offset_1","startX_0","startY","endY","offset_2","offset_3","offset_4","background","borderRadius","zIndex","$scaleFactor","$width","$height","clamp","number","max","inMin","inMax","outMin","outMax","mapped","OverlayDragPreview","skeleton","maxSkeletonWidth","innerWidth","scaleFactor","offsetX","offsetY","prefersDark","usePrefersDark","theme","useTheme_v2","radius","T0","T1","childRects","imageRects","textRects","color","r_1","r","from","tagName","r_0","OverlayMinimapPrompt","elementsReducer","elements","message","activated","dragDisabled","clickedElement","overlayStateReducer","state","contextMenu","focusPath","perspective","isDragging","dragShowMinimap","dragShowMinimapPrompt","dragSkeleton","dragMinimapTransition","prevFocusPath","startsWith","display","groupRect","PreviewSnapshotsProvider","children","setPreviewSnapshots","signal","response","fetch","suppressWarnings","snapshots","fetchPreviewSnapshots","previewSapshotsFetch","AbortController","unsub","onStatus","abort","isSanityNode","isDocumentSchemaType","isTypeSchemaType","popUnkeyedPathSegments","split","toReversed","reduce","acc","part","includes","join","getPathsWithUnresolvedTypes","SchemaProvider","Map","resolvedTypes","setResolvedTypes","schema","setSchema","fetchSchema","schemaFetch","reportedPathsRef","useDeferredValue","paths","controllerRef","reportPaths","paths_0","signal_0","initialReportedPaths","response_0","aborted","types","p","_type","fieldFromPath","schemaType_1","path_0","prevPath","next","rest","objectField","fields","name_0","get","Boolean","type_0","nodePath","flatMap","console","warn","createStore","initialState","getState","listeners","Set","setState","fn","l","listener","add","delete","store","SharedStateProvider","catch","value_0","prev","prev_0","Object","fromEntries","entries","reason","debug","TelemetryProvider","events","log","useController","inFrame","inPopUp","overlayController","optimisticActorReady","useOptimisticActorReady","createOverlayController","overlayElement","destroy","usePerspectiveSync","dispatch","controller","then","data_0","isEqualSets","a","b","size","has","useReportDocuments","lastReported","documents","perspective_0","reportDocuments","nodes","nodeIds","documentsOnPage","projectId","_projectId","dataset","_dataset","e_0","s","$zIndex","raf2","r0","r1","requestAnimationFrame","cancelAnimationFrame","DocumentReporter","documentIds","uniqueIds","setUniqueIds","actor","useOptimisticActor","id_0","send","documentId","getDraftId","getPublishedId","id_1","OverlaysController","onDrag","overlayEnabled","rootElement","enabled","dragGroup","cursor","removeProperty","activate","deactivate","Overlays","comlinkStatus","_componentResolver","useReducer","setRootElement","setOverlayEnabled","unsubs","setProperty","scrollY","updateDragPreviewCustomProps","handleClick","handleKeyUp","isAltKey","handleKeydown","isHotkey","overlaysFlash","setOverlaysFlash","fadingOut","setFadingOut","fadeOutTimeoutRef","setTimeout","clearTimeout","closeContextMenu","_temp9","element_0","getAttribute","e_2","sanityNodesExistInSameArray","elementsToRender","t22","t23","t24","t25","t26","t27","studioTheme","t28","IS_MAC","test","navigator","platform","MODIFIERS","alt","ctrl","mod","shift","keys","every","toUpperCase","prevId","isHTMLAnchorElement","isHTMLElement","closest","altKey","preventDefault","newEvent","MouseEvent","bubbles","enabled_0","enabled_1","enabled_2","e_1","Refresh","refresh","manualRefreshRef","mutationRefreshRef","source","promise","timedOut","finally","promise_0","promise_1","useComlink","active","setNode","status","setStatus","createNode","connectTo","createNodeMachine","provide","actors","createCompatibilityActors","stop","start","domain","postMessage","createSharedListener","incomingConnection$","ReplaySubject","incomingMutations$","Subject","merge","useDatasetMutator","datasetMutator","createDatasetMutator","mutator","createActor","input","client","withConfig","sharedListener","featuresFetch","features","optimistic","setActor","VisualEditing","components","portal","setInFrame","setInPopUp","isMaybePreviewIframe","isMaybePreviewWindow","portalElement","setPortalElement","createElement","documentElement","appendChild","contains","removeChild","createPortal","displayName"],"mappings":"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"}